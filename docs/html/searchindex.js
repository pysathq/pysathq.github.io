Search.setIndex({"alltitles": {"A deletion-based MUS extractor (pysat.examples.musx)": [[13, null]], "API documentation": [[21, "api-documentation"]], "An iterative model enumerator (pysat.examples.models)": [[12, null]], "ApproxMC model counter (pysat.allies.approxmc)": [[0, null]], "Bica algorithm for formula simplification (pysat.examples.bica)": [[5, null]], "Boolean formula manipulation (pysat.formula)": [[17, null]], "CLD-like MCS enumerator (pysat.examples.mcsls)": [[11, null]], "Cardinality encodings (pysat.card)": [[2, null]], "Collection of backbone computation algorithms (pysat.examples.bbscan)": [[4, null]], "Core PySAT modules": [[21, "core-pysat-modules"]], "External engines (pysat.engines)": [[3, null]], "Formula processing (pysat.process)": [[19, null]], "Fu&Malik MaxSAT algorithm (pysat.examples.fm)": [[6, null]], "Hard formula generator (pysat.examples.genhard)": [[7, null]], "LBX-like MCS enumerator (pysat.examples.lbx)": [[9, null]], "LSU algorithm for MaxSAT (pysat.examples.lsu)": [[10, null]], "List of classes": [[0, "list-of-classes"], [1, "list-of-classes"], [2, "list-of-classes"], [3, "list-of-classes"], [4, "list-of-classes"], [5, "list-of-classes"], [6, "list-of-classes"], [7, "list-of-classes"], [8, "list-of-classes"], [9, "list-of-classes"], [10, "list-of-classes"], [11, "list-of-classes"], [12, "list-of-classes"], [13, "list-of-classes"], [14, "list-of-classes"], [15, "list-of-classes"], [16, "list-of-classes"], [17, "list-of-classes"], [18, "list-of-classes"], [19, "list-of-classes"], [20, "list-of-classes"]], "Minimum/minimal hitting set solver (pysat.examples.hitman)": [[8, null]], "Module description": [[0, "module-description"], [1, "module-description"], [2, "module-description"], [3, "module-description"], [4, "module-description"], [5, "module-description"], [6, "module-description"], [7, "module-description"], [8, "module-description"], [9, "module-description"], [10, "module-description"], [11, "module-description"], [12, "module-description"], [13, "module-description"], [14, "module-description"], [15, "module-description"], [16, "module-description"], [17, "module-description"], [18, "module-description"], [19, "module-description"], [20, "module-description"]], "Module details": [[0, "module-details"], [1, "module-details"], [2, "module-details"], [3, "module-details"], [4, "module-details"], [5, "module-details"], [6, "module-details"], [7, "module-details"], [8, "module-details"], [9, "module-details"], [10, "module-details"], [11, "module-details"], [12, "module-details"], [13, "module-details"], [14, "module-details"], [15, "module-details"], [16, "module-details"], [17, "module-details"], [18, "module-details"], [19, "module-details"], [20, "module-details"]], "OptUx optimal MUS enumerator (pysat.examples.optux)": [[14, null]], "Primer-B algorithm for prime enumeration (pysat.examples.primer)": [[15, null]], "Pseudo-Boolean encodings (pysat.pb)": [[18, null]], "RC2 MaxSAT solver (pysat.examples.rc2)": [[16, null]], "SAT solvers\u2019 API (pysat.solvers)": [[20, null]], "Supplementary allies package": [[21, "supplementary-allies-package"]], "Supplementary examples package": [[21, "supplementary-examples-package"]], "UniGen almost-uniform sampler (pysat.allies.unigen)": [[1, null]], "Welcome to PySAT\u2019s documentation!": [[21, null]]}, "docnames": ["api/allies/approxmc", "api/allies/unigen", "api/card", "api/engines", "api/examples/bbscan", "api/examples/bica", "api/examples/fm", "api/examples/genhard", "api/examples/hitman", "api/examples/lbx", "api/examples/lsu", "api/examples/mcsls", "api/examples/models", "api/examples/musx", "api/examples/optux", "api/examples/primer", "api/examples/rc2", "api/formula", "api/pb", "api/process", "api/solvers", "index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["api/allies/approxmc.rst", "api/allies/unigen.rst", "api/card.rst", "api/engines.rst", "api/examples/bbscan.rst", "api/examples/bica.rst", "api/examples/fm.rst", "api/examples/genhard.rst", "api/examples/hitman.rst", "api/examples/lbx.rst", "api/examples/lsu.rst", "api/examples/mcsls.rst", "api/examples/models.rst", "api/examples/musx.rst", "api/examples/optux.rst", "api/examples/primer.rst", "api/examples/rc2.rst", "api/formula.rst", "api/pb.rst", "api/process.rst", "api/solvers.rst", "index.rst"], "indexentries": {"_assert_lt() (examples.lsu.lsu method)": [[10, "examples.lsu.LSU._assert_lt", false]], "_assert_lt() (examples.lsu.lsuplus method)": [[10, "examples.lsu.LSUPlus._assert_lt", false]], "_compute() (examples.fm.fm method)": [[6, "examples.fm.FM._compute", false]], "_compute() (examples.lbx.lbx method)": [[9, "examples.lbx.LBX._compute", false]], "_compute() (examples.mcsls.mcsls method)": [[11, "examples.mcsls.MCSls._compute", false]], "_compute() (examples.musx.musx method)": [[13, "examples.musx.MUSX._compute", false]], "_disjoint() (examples.optux.optux method)": [[14, "examples.optux.OptUx._disjoint", false]], "_filter_satisfied() (examples.lbx.lbx method)": [[9, "examples.lbx.LBX._filter_satisfied", false]], "_get_model_cost() (examples.lsu.lsu method)": [[10, "examples.lsu.LSU._get_model_cost", false]], "_init() (examples.lsu.lsu method)": [[10, "examples.lsu.LSU._init", false]], "_map_extlit() (examples.lbx.lbx method)": [[9, "examples.lbx.LBX._map_extlit", false]], "_map_extlit() (examples.mcsls.mcsls method)": [[11, "examples.mcsls.MCSls._map_extlit", false]], "_map_extlit() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2._map_extlit", false]], "_overapprox() (examples.mcsls.mcsls method)": [[11, "examples.mcsls.MCSls._overapprox", false]], "_process_soft() (examples.optux.optux method)": [[14, "examples.optux.OptUx._process_soft", false]], "_satisfied() (examples.lbx.lbx method)": [[9, "examples.lbx.LBX._satisfied", false]], "abandon_unweighted() (pysat.engines.linearconstraint method)": [[3, "pysat.engines.LinearConstraint.abandon_unweighted", false]], "abandon_weighted() (pysat.engines.linearconstraint method)": [[3, "pysat.engines.LinearConstraint.abandon_weighted", false]], "accum_stats() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.accum_stats", false]], "activate_atmost() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.activate_atmost", false]], "activate_clauses() (examples.rc2.rc2stratified method)": [[16, "examples.rc2.RC2Stratified.activate_clauses", false]], "adapt_am1() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.adapt_am1", false]], "adaptive_constants() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.adaptive_constants", false]], "adaptive_update() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.adaptive_update", false]], "add_atmost() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.add_atmost", false]], "add_clause() (allies.approxmc.counter method)": [[0, "allies.approxmc.Counter.add_clause", false]], "add_clause() (allies.unigen.sampler method)": [[1, "allies.unigen.Sampler.add_clause", false]], "add_clause() (examples.lbx.lbx method)": [[9, "examples.lbx.LBX.add_clause", false]], "add_clause() (examples.mcsls.mcsls method)": [[11, "examples.mcsls.MCSls.add_clause", false]], "add_clause() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.add_clause", false]], "add_clause() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.add_clause", false]], "add_clause() (pysat.engines.propagator method)": [[3, "pysat.engines.Propagator.add_clause", false]], "add_clause() (pysat.process.processor method)": [[19, "pysat.process.Processor.add_clause", false]], "add_clause() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.add_clause", false]], "add_constraint() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.add_constraint", false]], "add_hard() (examples.hitman.hitman method)": [[8, "examples.hitman.Hitman.add_hard", false]], "add_xor_clause() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.add_xor_clause", false]], "allies.approxmc": [[0, "module-allies.approxmc", false]], "allies.unigen": [[1, "module-allies.unigen", false]], "and (class in pysat.formula)": [[17, "pysat.formula.And", false]], "append() (pysat.formula.cnf method)": [[17, "pysat.formula.CNF.append", false]], "append() (pysat.formula.cnfplus method)": [[17, "pysat.formula.CNFPlus.append", false]], "append() (pysat.formula.wcnf method)": [[17, "pysat.formula.WCNF.append", false]], "append() (pysat.formula.wcnfplus method)": [[17, "pysat.formula.WCNFPlus.append", false]], "append_formula() (pysat.process.processor method)": [[19, "pysat.process.Processor.append_formula", false]], "append_formula() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.append_formula", false]], "atleast() (pysat.card.cardenc class method)": [[2, "pysat.card.CardEnc.atleast", false]], "atleast() (pysat.pb.pbenc class method)": [[18, "pysat.pb.PBEnc.atleast", false]], "atmost() (pysat.card.cardenc class method)": [[2, "pysat.card.CardEnc.atmost", false]], "atmost() (pysat.pb.pbenc class method)": [[18, "pysat.pb.PBEnc.atmost", false]], "atom (class in examples.hitman)": [[8, "examples.hitman.Atom", false]], "atom (class in pysat.formula)": [[17, "pysat.formula.Atom", false]], "atoms() (pysat.formula.formula method)": [[17, "pysat.formula.Formula.atoms", false]], "attach_values() (pysat.engines.linearconstraint method)": [[3, "pysat.engines.LinearConstraint.attach_values", false]], "attach_vpool() (pysat.formula.formula static method)": [[17, "pysat.formula.Formula.attach_vpool", false]], "bbscan (class in examples.bbscan)": [[4, "examples.bbscan.BBScan", false]], "bica (class in examples.bica)": [[5, "examples.bica.Bica", false]], "block() (examples.hitman.hitman method)": [[8, "examples.hitman.Hitman.block", false]], "block() (examples.lbx.lbx method)": [[9, "examples.lbx.LBX.block", false]], "block() (examples.mcsls.mcsls method)": [[11, "examples.mcsls.MCSls.block", false]], "booleanengine (class in pysat.engines)": [[3, "pysat.engines.BooleanEngine", false]], "cardenc (class in pysat.card)": [[2, "pysat.card.CardEnc", false]], "cb (class in examples.genhard)": [[7, "examples.genhard.CB", false]], "check_model() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.check_model", false]], "check_model() (pysat.engines.propagator method)": [[3, "pysat.engines.Propagator.check_model", false]], "clausify() (pysat.formula.formula method)": [[17, "pysat.formula.Formula.clausify", false]], "cleanup() (pysat.formula.formula static method)": [[17, "pysat.formula.Formula.cleanup", false]], "cleanup_watched() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.cleanup_watched", false]], "clear_interrupt() (examples.lsu.lsu method)": [[10, "examples.lsu.LSU.clear_interrupt", false]], "clear_interrupt() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.clear_interrupt", false]], "cnf (class in pysat.formula)": [[17, "pysat.formula.CNF", false]], "cnfplus (class in pysat.formula)": [[17, "pysat.formula.CNFPlus", false]], "compute() (examples.bbscan.bbscan method)": [[4, "examples.bbscan.BBScan.compute", false]], "compute() (examples.bica.bica method)": [[5, "examples.bica.Bica.compute", false]], "compute() (examples.fm.fm method)": [[6, "examples.fm.FM.compute", false]], "compute() (examples.lbx.lbx method)": [[9, "examples.lbx.LBX.compute", false]], "compute() (examples.mcsls.mcsls method)": [[11, "examples.mcsls.MCSls.compute", false]], "compute() (examples.musx.musx method)": [[13, "examples.musx.MUSX.compute", false]], "compute() (examples.optux.optux method)": [[14, "examples.optux.OptUx.compute", false]], "compute() (examples.primer.primer method)": [[15, "examples.primer.Primer.compute", false]], "compute() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.compute", false]], "compute() (examples.rc2.rc2stratified method)": [[16, "examples.rc2.RC2Stratified.compute", false]], "compute_() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.compute_", false]], "conf_budget() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.conf_budget", false]], "configure() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.configure", false]], "connect_propagator() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.connect_propagator", false]], "copy() (pysat.formula.cnf method)": [[17, "pysat.formula.CNF.copy", false]], "copy() (pysat.formula.cnfplus method)": [[17, "pysat.formula.CNFPlus.copy", false]], "copy() (pysat.formula.wcnf method)": [[17, "pysat.formula.WCNF.copy", false]], "copy() (pysat.formula.wcnfplus method)": [[17, "pysat.formula.WCNFPlus.copy", false]], "count() (allies.approxmc.counter method)": [[0, "allies.approxmc.Counter.count", false]], "counter (class in allies.approxmc)": [[0, "allies.approxmc.Counter", false]], "create_sum() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.create_sum", false]], "dec_budget() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.dec_budget", false]], "decide() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.decide", false]], "decide() (pysat.engines.propagator method)": [[3, "pysat.engines.Propagator.decide", false]], "delete() (allies.approxmc.counter method)": [[0, "allies.approxmc.Counter.delete", false]], "delete() (allies.unigen.sampler method)": [[1, "allies.unigen.Sampler.delete", false]], "delete() (examples.bbscan.bbscan method)": [[4, "examples.bbscan.BBScan.delete", false]], "delete() (examples.bica.bica method)": [[5, "examples.bica.Bica.delete", false]], "delete() (examples.fm.fm method)": [[6, "examples.fm.FM.delete", false]], "delete() (examples.hitman.hitman method)": [[8, "examples.hitman.Hitman.delete", false]], "delete() (examples.lbx.lbx method)": [[9, "examples.lbx.LBX.delete", false]], "delete() (examples.lsu.lsu method)": [[10, "examples.lsu.LSU.delete", false]], "delete() (examples.mcsls.mcsls method)": [[11, "examples.mcsls.MCSls.delete", false]], "delete() (examples.musx.musx method)": [[13, "examples.musx.MUSX.delete", false]], "delete() (examples.optux.optux method)": [[14, "examples.optux.OptUx.delete", false]], "delete() (examples.primer.primer method)": [[15, "examples.primer.Primer.delete", false]], "delete() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.delete", false]], "delete() (pysat.card.itotalizer method)": [[2, "pysat.card.ITotalizer.delete", false]], "delete() (pysat.process.processor method)": [[19, "pysat.process.Processor.delete", false]], "delete() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.delete", false]], "disable() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.disable", false]], "disable_propagator() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.disable_propagator", false]], "disconnect_propagator() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.disconnect_propagator", false]], "do_cld_check() (examples.lbx.lbx method)": [[9, "examples.lbx.LBX.do_cld_check", false]], "do_cld_check() (examples.mcsls.mcsls method)": [[11, "examples.mcsls.MCSls.do_cld_check", false]], "enable() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.enable", false]], "enable_propagator() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.enable_propagator", false]], "enctype (class in pysat.card)": [[2, "pysat.card.EncType", false]], "enctype (class in pysat.pb)": [[18, "pysat.pb.EncType", false]], "enum_models() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.enum_models", false]], "enumerate() (examples.bica.bica method)": [[5, "examples.bica.Bica.enumerate", false]], "enumerate() (examples.hitman.hitman method)": [[8, "examples.hitman.Hitman.enumerate", false]], "enumerate() (examples.lbx.lbx method)": [[9, "examples.lbx.LBX.enumerate", false]], "enumerate() (examples.mcsls.mcsls method)": [[11, "examples.mcsls.MCSls.enumerate", false]], "enumerate() (examples.optux.optux method)": [[14, "examples.optux.OptUx.enumerate", false]], "enumerate() (examples.primer.primer method)": [[15, "examples.primer.Primer.enumerate", false]], "enumerate() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.enumerate", false]], "enumerate_models() (in module examples.models)": [[12, "examples.models.enumerate_models", false]], "equals (class in pysat.formula)": [[17, "pysat.formula.Equals", false]], "equals() (pysat.card.cardenc class method)": [[2, "pysat.card.CardEnc.equals", false]], "equals() (pysat.pb.pbenc class method)": [[18, "pysat.pb.PBEnc.equals", false]], "examples.bbscan": [[4, "module-examples.bbscan", false]], "examples.bica": [[5, "module-examples.bica", false]], "examples.fm": [[6, "module-examples.fm", false]], "examples.genhard": [[7, "module-examples.genhard", false]], "examples.hitman": [[8, "module-examples.hitman", false]], "examples.lbx": [[9, "module-examples.lbx", false]], "examples.lsu": [[10, "module-examples.lsu", false]], "examples.mcsls": [[11, "module-examples.mcsls", false]], "examples.models": [[12, "module-examples.models", false]], "examples.musx": [[13, "module-examples.musx", false]], "examples.optux": [[14, "module-examples.optux", false]], "examples.primer": [[15, "module-examples.primer", false]], "examples.rc2": [[16, "module-examples.rc2", false]], "exhaust_core() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.exhaust_core", false]], "explain_failure() (pysat.engines.linearconstraint method)": [[3, "pysat.engines.LinearConstraint.explain_failure", false]], "export_vpool() (pysat.formula.formula static method)": [[17, "pysat.formula.Formula.export_vpool", false]], "extend() (pysat.card.itotalizer method)": [[2, "pysat.card.ITotalizer.extend", false]], "extend() (pysat.formula.cnf method)": [[17, "pysat.formula.CNF.extend", false]], "extend() (pysat.formula.cnfplus method)": [[17, "pysat.formula.CNFPlus.extend", false]], "extend() (pysat.formula.wcnf method)": [[17, "pysat.formula.WCNF.extend", false]], "falsified_by() (pysat.engines.linearconstraint method)": [[3, "pysat.engines.LinearConstraint.falsified_by", false]], "filter_assumps() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.filter_assumps", false]], "finish_level() (examples.rc2.rc2stratified method)": [[16, "examples.rc2.RC2Stratified.finish_level", false]], "fm (class in examples.fm)": [[6, "examples.fm.FM", false]], "formula (class in pysat.formula)": [[17, "pysat.formula.Formula", false]], "formulaerror": [[17, "pysat.formula.FormulaError", false]], "formulas() (pysat.formula.formula static method)": [[17, "pysat.formula.Formula.formulas", false]], "formulatype (class in pysat.formula)": [[17, "pysat.formula.FormulaType", false]], "found_optimum() (examples.lsu.lsu method)": [[10, "examples.lsu.LSU.found_optimum", false]], "from_aiger() (pysat.formula.cnf method)": [[17, "pysat.formula.CNF.from_aiger", false]], "from_clauses() (pysat.formula.cnf method)": [[17, "pysat.formula.CNF.from_clauses", false]], "from_file() (pysat.formula.cnf method)": [[17, "pysat.formula.CNF.from_file", false]], "from_file() (pysat.formula.wcnf method)": [[17, "pysat.formula.WCNF.from_file", false]], "from_fp() (pysat.formula.cnf method)": [[17, "pysat.formula.CNF.from_fp", false]], "from_fp() (pysat.formula.cnfplus method)": [[17, "pysat.formula.CNFPlus.from_fp", false]], "from_fp() (pysat.formula.wcnf method)": [[17, "pysat.formula.WCNF.from_fp", false]], "from_fp() (pysat.formula.wcnfplus method)": [[17, "pysat.formula.WCNFPlus.from_fp", false]], "from_string() (pysat.formula.cnf method)": [[17, "pysat.formula.CNF.from_string", false]], "from_string() (pysat.formula.wcnf method)": [[17, "pysat.formula.WCNF.from_string", false]], "geq() (pysat.pb.pbenc class method)": [[18, "pysat.pb.PBEnc.geq", false]], "get() (examples.hitman.hitman method)": [[8, "examples.hitman.Hitman.get", false]], "get_core() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.get_core", false]], "get_core() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.get_core", false]], "get_model() (examples.lsu.lsu method)": [[10, "examples.lsu.LSU.get_model", false]], "get_model() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.get_model", false]], "get_proof() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.get_proof", false]], "get_status() (pysat.process.processor method)": [[19, "pysat.process.Processor.get_status", false]], "get_status() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.get_status", false]], "gt (class in examples.genhard)": [[7, "examples.genhard.GT", false]], "hit() (examples.hitman.hitman method)": [[8, "examples.hitman.Hitman.hit", false]], "hitman (class in examples.hitman)": [[8, "examples.hitman.Hitman", false]], "id() (pysat.formula.idpool method)": [[17, "pysat.formula.IDPool.id", false]], "idpool (class in pysat.formula)": [[17, "pysat.formula.IDPool", false]], "ignore() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.ignore", false]], "implies (class in pysat.formula)": [[17, "pysat.formula.Implies", false]], "increase() (pysat.card.itotalizer method)": [[2, "pysat.card.ITotalizer.increase", false]], "init() (examples.fm.fm method)": [[6, "examples.fm.FM.init", false]], "init() (examples.hitman.hitman method)": [[8, "examples.hitman.Hitman.init", false]], "init() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.init", false]], "init_oracles() (examples.primer.primer method)": [[15, "examples.primer.Primer.init_oracles", false]], "init_wstr() (examples.rc2.rc2stratified method)": [[16, "examples.rc2.RC2Stratified.init_wstr", false]], "interrupt() (examples.lsu.lsu method)": [[10, "examples.lsu.LSU.interrupt", false]], "interrupt() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.interrupt", false]], "is_active() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.is_active", false]], "is_decision() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.is_decision", false]], "ite (class in pysat.formula)": [[17, "pysat.formula.ITE", false]], "itotalizer (class in pysat.card)": [[2, "pysat.card.ITotalizer", false]], "justify_unweighted() (pysat.engines.linearconstraint method)": [[3, "pysat.engines.LinearConstraint.justify_unweighted", false]], "justify_weighted() (pysat.engines.linearconstraint method)": [[3, "pysat.engines.LinearConstraint.justify_weighted", false]], "lbx (class in examples.lbx)": [[9, "examples.lbx.LBX", false]], "leq() (pysat.pb.pbenc class method)": [[18, "pysat.pb.PBEnc.leq", false]], "linearconstraint (class in pysat.engines)": [[3, "pysat.engines.LinearConstraint", false]], "literals() (pysat.formula.formula static method)": [[17, "pysat.formula.Formula.literals", false]], "lsu (class in examples.lsu)": [[10, "examples.lsu.LSU", false]], "lsuplus (class in examples.lsu)": [[10, "examples.lsu.LSUPlus", false]], "mcsls (class in examples.mcsls)": [[11, "examples.mcsls.MCSls", false]], "merge_with() (pysat.card.itotalizer method)": [[2, "pysat.card.ITotalizer.merge_with", false]], "minimise_dual() (examples.primer.primer method)": [[15, "examples.primer.Primer.minimise_dual", false]], "minimize_core() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.minimize_core", false]], "module": [[0, "module-allies.approxmc", false], [1, "module-allies.unigen", false], [2, "module-pysat.card", false], [3, "module-pysat.engines", false], [4, "module-examples.bbscan", false], [5, "module-examples.bica", false], [6, "module-examples.fm", false], [7, "module-examples.genhard", false], [8, "module-examples.hitman", false], [9, "module-examples.lbx", false], [10, "module-examples.lsu", false], [11, "module-examples.mcsls", false], [12, "module-examples.models", false], [13, "module-examples.musx", false], [14, "module-examples.optux", false], [15, "module-examples.primer", false], [16, "module-examples.rc2", false], [17, "module-pysat.formula", false], [18, "module-pysat.pb", false], [19, "module-pysat.process", false], [20, "module-pysat.solvers", false]], "musx (class in examples.musx)": [[13, "examples.musx.MUSX", false]], "neg (class in pysat.formula)": [[17, "pysat.formula.Neg", false]], "negate() (pysat.formula.cnf method)": [[17, "pysat.formula.CNF.negate", false]], "new() (pysat.card.itotalizer method)": [[2, "pysat.card.ITotalizer.new", false]], "new() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.new", false]], "next_level() (examples.rc2.rc2stratified method)": [[16, "examples.rc2.RC2Stratified.next_level", false]], "nof_clauses() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.nof_clauses", false]], "nof_vars() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.nof_vars", false]], "normalize_negatives() (pysat.formula.wcnf method)": [[17, "pysat.formula.WCNF.normalize_negatives", false]], "nosuchencodingerror": [[2, "pysat.card.NoSuchEncodingError", false], [18, "pysat.pb.NoSuchEncodingError", false]], "nosuchsolvererror": [[20, "pysat.solvers.NoSuchSolverError", false]], "obj() (pysat.formula.idpool method)": [[17, "pysat.formula.IDPool.obj", false]], "observe() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.observe", false]], "occupy() (pysat.formula.idpool method)": [[17, "pysat.formula.IDPool.occupy", false]], "on_assignment() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.on_assignment", false]], "on_assignment() (pysat.engines.propagator method)": [[3, "pysat.engines.Propagator.on_assignment", false]], "on_backtrack() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.on_backtrack", false]], "on_backtrack() (pysat.engines.propagator method)": [[3, "pysat.engines.Propagator.on_backtrack", false]], "on_new_level() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.on_new_level", false]], "on_new_level() (pysat.engines.propagator method)": [[3, "pysat.engines.Propagator.on_new_level", false]], "optux (class in examples.optux)": [[14, "examples.optux.OptUx", false]], "or (class in pysat.formula)": [[17, "pysat.formula.Or", false]], "oracle_time() (examples.bbscan.bbscan method)": [[4, "examples.bbscan.BBScan.oracle_time", false]], "oracle_time() (examples.bica.bica method)": [[5, "examples.bica.Bica.oracle_time", false]], "oracle_time() (examples.fm.fm method)": [[6, "examples.fm.FM.oracle_time", false]], "oracle_time() (examples.hitman.hitman method)": [[8, "examples.hitman.Hitman.oracle_time", false]], "oracle_time() (examples.lbx.lbx method)": [[9, "examples.lbx.LBX.oracle_time", false]], "oracle_time() (examples.lsu.lsu method)": [[10, "examples.lsu.LSU.oracle_time", false]], "oracle_time() (examples.mcsls.mcsls method)": [[11, "examples.mcsls.MCSls.oracle_time", false]], "oracle_time() (examples.musx.musx method)": [[13, "examples.musx.MUSX.oracle_time", false]], "oracle_time() (examples.optux.optux method)": [[14, "examples.optux.OptUx.oracle_time", false]], "oracle_time() (examples.primer.primer method)": [[15, "examples.primer.Primer.oracle_time", false]], "oracle_time() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.oracle_time", false]], "par (class in examples.genhard)": [[7, "examples.genhard.PAR", false]], "pbenc (class in pysat.pb)": [[18, "pysat.pb.PBEnc", false]], "php (class in examples.genhard)": [[7, "examples.genhard.PHP", false]], "preprocess() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.preprocess", false]], "primer (class in examples.primer)": [[15, "examples.primer.Primer", false]], "process() (pysat.process.processor method)": [[19, "pysat.process.Processor.process", false]], "process_am1() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.process_am1", false]], "process_am1() (examples.rc2.rc2stratified method)": [[16, "examples.rc2.RC2Stratified.process_am1", false]], "process_core() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.process_core", false]], "process_linear() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.process_linear", false]], "process_parity() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.process_parity", false]], "process_sels() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.process_sels", false]], "process_sels() (examples.rc2.rc2stratified method)": [[16, "examples.rc2.RC2Stratified.process_sels", false]], "process_sums() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.process_sums", false]], "process_sums() (examples.rc2.rc2stratified method)": [[16, "examples.rc2.RC2Stratified.process_sums", false]], "processor (class in pysat.process)": [[19, "pysat.process.Processor", false]], "prop_budget() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.prop_budget", false]], "propagate() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.propagate", false]], "propagate() (pysat.engines.propagator method)": [[3, "pysat.engines.Propagator.propagate", false]], "propagate() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.propagate", false]], "propagate_unweighted() (pysat.engines.linearconstraint method)": [[3, "pysat.engines.LinearConstraint.propagate_unweighted", false]], "propagate_weighted() (pysat.engines.linearconstraint method)": [[3, "pysat.engines.LinearConstraint.propagate_weighted", false]], "propagator (class in pysat.engines)": [[3, "pysat.engines.Propagator", false]], "propagator_active() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.propagator_active", false]], "provide_reason() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.provide_reason", false]], "provide_reason() (pysat.engines.propagator method)": [[3, "pysat.engines.Propagator.provide_reason", false]], "pysat.card": [[2, "module-pysat.card", false]], "pysat.engines": [[3, "module-pysat.engines", false]], "pysat.formula": [[17, "module-pysat.formula", false]], "pysat.pb": [[18, "module-pysat.pb", false]], "pysat.process": [[19, "module-pysat.process", false]], "pysat.solvers": [[20, "module-pysat.solvers", false]], "rc2 (class in examples.rc2)": [[16, "examples.rc2.RC2", false]], "rc2stratified (class in examples.rc2)": [[16, "examples.rc2.RC2Stratified", false]], "register_watched() (pysat.engines.linearconstraint method)": [[3, "pysat.engines.LinearConstraint.register_watched", false]], "reinit() (examples.fm.fm method)": [[6, "examples.fm.FM.reinit", false]], "relax_core() (examples.fm.fm method)": [[6, "examples.fm.FM.relax_core", false]], "remove_unit_core() (examples.fm.fm method)": [[6, "examples.fm.FM.remove_unit_core", false]], "reset_observed() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.reset_observed", false]], "restart() (pysat.formula.idpool method)": [[17, "pysat.formula.IDPool.restart", false]], "restore() (pysat.process.processor method)": [[19, "pysat.process.Processor.restore", false]], "sample() (allies.unigen.sampler method)": [[1, "allies.unigen.Sampler.sample", false]], "sampler (class in allies.unigen)": [[1, "allies.unigen.Sampler", false]], "satisfied() (pysat.formula.formula method)": [[17, "pysat.formula.Formula.satisfied", false]], "set_bound() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.set_bound", false]], "set_context() (pysat.formula.formula static method)": [[17, "pysat.formula.Formula.set_context", false]], "set_phases() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.set_phases", false]], "setup_observe() (pysat.engines.booleanengine method)": [[3, "pysat.engines.BooleanEngine.setup_observe", false]], "simplified() (pysat.formula.and method)": [[17, "pysat.formula.And.simplified", false]], "simplified() (pysat.formula.atom method)": [[17, "pysat.formula.Atom.simplified", false]], "simplified() (pysat.formula.cnf method)": [[17, "pysat.formula.CNF.simplified", false]], "simplified() (pysat.formula.equals method)": [[17, "pysat.formula.Equals.simplified", false]], "simplified() (pysat.formula.formula method)": [[17, "pysat.formula.Formula.simplified", false]], "simplified() (pysat.formula.implies method)": [[17, "pysat.formula.Implies.simplified", false]], "simplified() (pysat.formula.ite method)": [[17, "pysat.formula.ITE.simplified", false]], "simplified() (pysat.formula.neg method)": [[17, "pysat.formula.Neg.simplified", false]], "simplified() (pysat.formula.or method)": [[17, "pysat.formula.Or.simplified", false]], "simplified() (pysat.formula.xor method)": [[17, "pysat.formula.XOr.simplified", false]], "solve() (examples.lsu.lsu method)": [[10, "examples.lsu.LSU.solve", false]], "solve() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.solve", false]], "solve_limited() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.solve_limited", false]], "solver (class in pysat.solvers)": [[20, "pysat.solvers.Solver", false]], "solvernames (class in pysat.solvers)": [[20, "pysat.solvers.SolverNames", false]], "split_core() (examples.fm.fm method)": [[6, "examples.fm.FM.split_core", false]], "start_mode() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.start_mode", false]], "supports_atmost() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.supports_atmost", false]], "switch_phase() (examples.hitman.hitman method)": [[8, "examples.hitman.Hitman.switch_phase", false]], "time() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.time", false]], "time_accum() (pysat.solvers.solver method)": [[20, "pysat.solvers.Solver.time_accum", false]], "to_alien() (pysat.formula.cnf method)": [[17, "pysat.formula.CNF.to_alien", false]], "to_alien() (pysat.formula.cnfplus method)": [[17, "pysat.formula.CNFPlus.to_alien", false]], "to_alien() (pysat.formula.wcnf method)": [[17, "pysat.formula.WCNF.to_alien", false]], "to_alien() (pysat.formula.wcnfplus method)": [[17, "pysat.formula.WCNFPlus.to_alien", false]], "to_dimacs() (pysat.formula.cnf method)": [[17, "pysat.formula.CNF.to_dimacs", false]], "to_dimacs() (pysat.formula.cnfplus method)": [[17, "pysat.formula.CNFPlus.to_dimacs", false]], "to_dimacs() (pysat.formula.wcnf method)": [[17, "pysat.formula.WCNF.to_dimacs", false]], "to_dimacs() (pysat.formula.wcnfplus method)": [[17, "pysat.formula.WCNFPlus.to_dimacs", false]], "to_file() (pysat.formula.cnf method)": [[17, "pysat.formula.CNF.to_file", false]], "to_file() (pysat.formula.wcnf method)": [[17, "pysat.formula.WCNF.to_file", false]], "to_fp() (pysat.formula.cnf method)": [[17, "pysat.formula.CNF.to_fp", false]], "to_fp() (pysat.formula.cnfplus method)": [[17, "pysat.formula.CNFPlus.to_fp", false]], "to_fp() (pysat.formula.wcnf method)": [[17, "pysat.formula.WCNF.to_fp", false]], "to_fp() (pysat.formula.wcnfplus method)": [[17, "pysat.formula.WCNFPlus.to_fp", false]], "treat_core() (examples.fm.fm method)": [[6, "examples.fm.FM.treat_core", false]], "trim_core() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.trim_core", false]], "unassign() (pysat.engines.linearconstraint method)": [[3, "pysat.engines.LinearConstraint.unassign", false]], "unsupportedbound": [[2, "pysat.card.UnsupportedBound", false]], "unweighted() (pysat.formula.wcnf method)": [[17, "pysat.formula.WCNF.unweighted", false]], "unweighted() (pysat.formula.wcnfplus method)": [[17, "pysat.formula.WCNFPlus.unweighted", false]], "update_sum() (examples.rc2.rc2 method)": [[16, "examples.rc2.RC2.update_sum", false]], "wcnf (class in pysat.formula)": [[17, "pysat.formula.WCNF", false]], "wcnfplus (class in pysat.formula)": [[17, "pysat.formula.WCNFPlus", false]], "weighted() (pysat.formula.cnf method)": [[17, "pysat.formula.CNF.weighted", false]], "weighted() (pysat.formula.cnfplus method)": [[17, "pysat.formula.CNFPlus.weighted", false]], "with_traceback() (pysat.card.nosuchencodingerror method)": [[2, "pysat.card.NoSuchEncodingError.with_traceback", false]], "with_traceback() (pysat.card.unsupportedbound method)": [[2, "pysat.card.UnsupportedBound.with_traceback", false]], "with_traceback() (pysat.pb.nosuchencodingerror method)": [[18, "pysat.pb.NoSuchEncodingError.with_traceback", false]], "with_traceback() (pysat.solvers.nosuchsolvererror method)": [[20, "pysat.solvers.NoSuchSolverError.with_traceback", false]], "xor (class in pysat.formula)": [[17, "pysat.formula.XOr", false]]}, "objects": {"allies": [[0, 0, 0, "-", "approxmc"], [1, 0, 0, "-", "unigen"]], "allies.approxmc": [[0, 1, 1, "", "Counter"]], "allies.approxmc.Counter": [[0, 2, 1, "", "add_clause"], [0, 2, 1, "", "count"], [0, 2, 1, "", "delete"]], "allies.unigen": [[1, 1, 1, "", "Sampler"]], "allies.unigen.Sampler": [[1, 2, 1, "", "add_clause"], [1, 2, 1, "", "delete"], [1, 2, 1, "", "sample"]], "examples": [[4, 0, 0, "-", "bbscan"], [5, 0, 0, "-", "bica"], [6, 0, 0, "-", "fm"], [7, 0, 0, "-", "genhard"], [8, 0, 0, "-", "hitman"], [9, 0, 0, "-", "lbx"], [10, 0, 0, "-", "lsu"], [11, 0, 0, "-", "mcsls"], [12, 0, 0, "-", "models"], [13, 0, 0, "-", "musx"], [14, 0, 0, "-", "optux"], [15, 0, 0, "-", "primer"], [16, 0, 0, "-", "rc2"]], "examples.bbscan": [[4, 1, 1, "", "BBScan"]], "examples.bbscan.BBScan": [[4, 2, 1, "", "compute"], [4, 2, 1, "", "delete"], [4, 2, 1, "", "oracle_time"]], "examples.bica": [[5, 1, 1, "", "Bica"]], "examples.bica.Bica": [[5, 2, 1, "", "compute"], [5, 2, 1, "", "delete"], [5, 2, 1, "", "enumerate"], [5, 2, 1, "", "oracle_time"]], "examples.fm": [[6, 1, 1, "", "FM"]], "examples.fm.FM": [[6, 2, 1, "", "_compute"], [6, 2, 1, "", "compute"], [6, 2, 1, "", "delete"], [6, 2, 1, "", "init"], [6, 2, 1, "", "oracle_time"], [6, 2, 1, "", "reinit"], [6, 2, 1, "", "relax_core"], [6, 2, 1, "", "remove_unit_core"], [6, 2, 1, "", "split_core"], [6, 2, 1, "", "treat_core"]], "examples.genhard": [[7, 1, 1, "", "CB"], [7, 1, 1, "", "GT"], [7, 1, 1, "", "PAR"], [7, 1, 1, "", "PHP"]], "examples.hitman": [[8, 1, 1, "", "Atom"], [8, 1, 1, "", "Hitman"]], "examples.hitman.Hitman": [[8, 2, 1, "", "add_hard"], [8, 2, 1, "", "block"], [8, 2, 1, "", "delete"], [8, 2, 1, "", "enumerate"], [8, 2, 1, "", "get"], [8, 2, 1, "", "hit"], [8, 2, 1, "", "init"], [8, 2, 1, "", "oracle_time"], [8, 2, 1, "", "switch_phase"]], "examples.lbx": [[9, 1, 1, "", "LBX"]], "examples.lbx.LBX": [[9, 2, 1, "", "_compute"], [9, 2, 1, "", "_filter_satisfied"], [9, 2, 1, "", "_map_extlit"], [9, 2, 1, "", "_satisfied"], [9, 2, 1, "", "add_clause"], [9, 2, 1, "", "block"], [9, 2, 1, "", "compute"], [9, 2, 1, "", "delete"], [9, 2, 1, "", "do_cld_check"], [9, 2, 1, "", "enumerate"], [9, 2, 1, "", "oracle_time"]], "examples.lsu": [[10, 1, 1, "", "LSU"], [10, 1, 1, "", "LSUPlus"]], "examples.lsu.LSU": [[10, 2, 1, "", "_assert_lt"], [10, 2, 1, "", "_get_model_cost"], [10, 2, 1, "", "_init"], [10, 2, 1, "", "clear_interrupt"], [10, 2, 1, "", "delete"], [10, 2, 1, "", "found_optimum"], [10, 2, 1, "", "get_model"], [10, 2, 1, "", "interrupt"], [10, 2, 1, "", "oracle_time"], [10, 2, 1, "", "solve"]], "examples.lsu.LSUPlus": [[10, 2, 1, "", "_assert_lt"]], "examples.mcsls": [[11, 1, 1, "", "MCSls"]], "examples.mcsls.MCSls": [[11, 2, 1, "", "_compute"], [11, 2, 1, "", "_map_extlit"], [11, 2, 1, "", "_overapprox"], [11, 2, 1, "", "add_clause"], [11, 2, 1, "", "block"], [11, 2, 1, "", "compute"], [11, 2, 1, "", "delete"], [11, 2, 1, "", "do_cld_check"], [11, 2, 1, "", "enumerate"], [11, 2, 1, "", "oracle_time"]], "examples.models": [[12, 3, 1, "", "enumerate_models"]], "examples.musx": [[13, 1, 1, "", "MUSX"]], "examples.musx.MUSX": [[13, 2, 1, "", "_compute"], [13, 2, 1, "", "compute"], [13, 2, 1, "", "delete"], [13, 2, 1, "", "oracle_time"]], "examples.optux": [[14, 1, 1, "", "OptUx"]], "examples.optux.OptUx": [[14, 2, 1, "", "_disjoint"], [14, 2, 1, "", "_process_soft"], [14, 2, 1, "", "compute"], [14, 2, 1, "", "delete"], [14, 2, 1, "", "enumerate"], [14, 2, 1, "", "oracle_time"]], "examples.primer": [[15, 1, 1, "", "Primer"]], "examples.primer.Primer": [[15, 2, 1, "", "compute"], [15, 2, 1, "", "delete"], [15, 2, 1, "", "enumerate"], [15, 2, 1, "", "init_oracles"], [15, 2, 1, "", "minimise_dual"], [15, 2, 1, "", "oracle_time"]], "examples.rc2": [[16, 1, 1, "", "RC2"], [16, 1, 1, "", "RC2Stratified"]], "examples.rc2.RC2": [[16, 2, 1, "", "_map_extlit"], [16, 2, 1, "", "adapt_am1"], [16, 2, 1, "", "add_clause"], [16, 2, 1, "", "compute"], [16, 2, 1, "", "compute_"], [16, 2, 1, "", "create_sum"], [16, 2, 1, "", "delete"], [16, 2, 1, "", "enumerate"], [16, 2, 1, "", "exhaust_core"], [16, 2, 1, "", "filter_assumps"], [16, 2, 1, "", "get_core"], [16, 2, 1, "", "init"], [16, 2, 1, "", "minimize_core"], [16, 2, 1, "", "oracle_time"], [16, 2, 1, "", "process_am1"], [16, 2, 1, "", "process_core"], [16, 2, 1, "", "process_sels"], [16, 2, 1, "", "process_sums"], [16, 2, 1, "", "set_bound"], [16, 2, 1, "", "trim_core"], [16, 2, 1, "", "update_sum"]], "examples.rc2.RC2Stratified": [[16, 2, 1, "", "activate_clauses"], [16, 2, 1, "", "compute"], [16, 2, 1, "", "finish_level"], [16, 2, 1, "", "init_wstr"], [16, 2, 1, "", "next_level"], [16, 2, 1, "", "process_am1"], [16, 2, 1, "", "process_sels"], [16, 2, 1, "", "process_sums"]], "pysat": [[2, 0, 0, "-", "card"], [3, 0, 0, "-", "engines"], [17, 0, 0, "-", "formula"], [18, 0, 0, "-", "pb"], [19, 0, 0, "-", "process"], [20, 0, 0, "-", "solvers"]], "pysat.card": [[2, 1, 1, "", "CardEnc"], [2, 1, 1, "", "EncType"], [2, 1, 1, "", "ITotalizer"], [2, 4, 1, "", "NoSuchEncodingError"], [2, 4, 1, "", "UnsupportedBound"]], "pysat.card.CardEnc": [[2, 2, 1, "", "atleast"], [2, 2, 1, "", "atmost"], [2, 2, 1, "", "equals"]], "pysat.card.ITotalizer": [[2, 2, 1, "", "delete"], [2, 2, 1, "", "extend"], [2, 2, 1, "", "increase"], [2, 2, 1, "", "merge_with"], [2, 2, 1, "", "new"]], "pysat.card.NoSuchEncodingError": [[2, 2, 1, "", "with_traceback"]], "pysat.card.UnsupportedBound": [[2, 2, 1, "", "with_traceback"]], "pysat.engines": [[3, 1, 1, "", "BooleanEngine"], [3, 1, 1, "", "LinearConstraint"], [3, 1, 1, "", "Propagator"]], "pysat.engines.BooleanEngine": [[3, 2, 1, "", "adaptive_constants"], [3, 2, 1, "", "adaptive_update"], [3, 2, 1, "", "add_clause"], [3, 2, 1, "", "add_constraint"], [3, 2, 1, "", "check_model"], [3, 2, 1, "", "cleanup_watched"], [3, 2, 1, "", "decide"], [3, 2, 1, "", "disable"], [3, 2, 1, "", "enable"], [3, 2, 1, "", "is_active"], [3, 2, 1, "", "on_assignment"], [3, 2, 1, "", "on_backtrack"], [3, 2, 1, "", "on_new_level"], [3, 2, 1, "", "preprocess"], [3, 2, 1, "", "process_linear"], [3, 2, 1, "", "process_parity"], [3, 2, 1, "", "propagate"], [3, 2, 1, "", "provide_reason"], [3, 2, 1, "", "setup_observe"]], "pysat.engines.LinearConstraint": [[3, 2, 1, "", "abandon_unweighted"], [3, 2, 1, "", "abandon_weighted"], [3, 2, 1, "", "attach_values"], [3, 2, 1, "", "explain_failure"], [3, 2, 1, "", "falsified_by"], [3, 2, 1, "", "justify_unweighted"], [3, 2, 1, "", "justify_weighted"], [3, 2, 1, "", "propagate_unweighted"], [3, 2, 1, "", "propagate_weighted"], [3, 2, 1, "", "register_watched"], [3, 2, 1, "", "unassign"]], "pysat.engines.Propagator": [[3, 2, 1, "", "add_clause"], [3, 2, 1, "", "check_model"], [3, 2, 1, "", "decide"], [3, 2, 1, "", "on_assignment"], [3, 2, 1, "", "on_backtrack"], [3, 2, 1, "", "on_new_level"], [3, 2, 1, "", "propagate"], [3, 2, 1, "", "provide_reason"]], "pysat.formula": [[17, 1, 1, "", "And"], [17, 1, 1, "", "Atom"], [17, 1, 1, "", "CNF"], [17, 1, 1, "", "CNFPlus"], [17, 1, 1, "", "Equals"], [17, 1, 1, "", "Formula"], [17, 4, 1, "", "FormulaError"], [17, 1, 1, "", "FormulaType"], [17, 1, 1, "", "IDPool"], [17, 1, 1, "", "ITE"], [17, 1, 1, "", "Implies"], [17, 1, 1, "", "Neg"], [17, 1, 1, "", "Or"], [17, 1, 1, "", "WCNF"], [17, 1, 1, "", "WCNFPlus"], [17, 1, 1, "", "XOr"]], "pysat.formula.And": [[17, 2, 1, "", "simplified"]], "pysat.formula.Atom": [[17, 2, 1, "", "simplified"]], "pysat.formula.CNF": [[17, 2, 1, "", "append"], [17, 2, 1, "", "copy"], [17, 2, 1, "", "extend"], [17, 2, 1, "", "from_aiger"], [17, 2, 1, "", "from_clauses"], [17, 2, 1, "", "from_file"], [17, 2, 1, "", "from_fp"], [17, 2, 1, "", "from_string"], [17, 2, 1, "", "negate"], [17, 2, 1, "", "simplified"], [17, 2, 1, "", "to_alien"], [17, 2, 1, "", "to_dimacs"], [17, 2, 1, "", "to_file"], [17, 2, 1, "", "to_fp"], [17, 2, 1, "", "weighted"]], "pysat.formula.CNFPlus": [[17, 2, 1, "", "append"], [17, 2, 1, "", "copy"], [17, 2, 1, "", "extend"], [17, 2, 1, "", "from_fp"], [17, 2, 1, "", "to_alien"], [17, 2, 1, "", "to_dimacs"], [17, 2, 1, "", "to_fp"], [17, 2, 1, "", "weighted"]], "pysat.formula.Equals": [[17, 2, 1, "", "simplified"]], "pysat.formula.Formula": [[17, 2, 1, "", "atoms"], [17, 2, 1, "", "attach_vpool"], [17, 2, 1, "", "clausify"], [17, 2, 1, "", "cleanup"], [17, 2, 1, "", "export_vpool"], [17, 2, 1, "", "formulas"], [17, 2, 1, "", "literals"], [17, 2, 1, "", "satisfied"], [17, 2, 1, "", "set_context"], [17, 2, 1, "", "simplified"]], "pysat.formula.IDPool": [[17, 2, 1, "", "id"], [17, 2, 1, "", "obj"], [17, 2, 1, "", "occupy"], [17, 2, 1, "", "restart"]], "pysat.formula.ITE": [[17, 2, 1, "", "simplified"]], "pysat.formula.Implies": [[17, 2, 1, "", "simplified"]], "pysat.formula.Neg": [[17, 2, 1, "", "simplified"]], "pysat.formula.Or": [[17, 2, 1, "", "simplified"]], "pysat.formula.WCNF": [[17, 2, 1, "", "append"], [17, 2, 1, "", "copy"], [17, 2, 1, "", "extend"], [17, 2, 1, "", "from_file"], [17, 2, 1, "", "from_fp"], [17, 2, 1, "", "from_string"], [17, 2, 1, "", "normalize_negatives"], [17, 2, 1, "", "to_alien"], [17, 2, 1, "", "to_dimacs"], [17, 2, 1, "", "to_file"], [17, 2, 1, "", "to_fp"], [17, 2, 1, "", "unweighted"]], "pysat.formula.WCNFPlus": [[17, 2, 1, "", "append"], [17, 2, 1, "", "copy"], [17, 2, 1, "", "from_fp"], [17, 2, 1, "", "to_alien"], [17, 2, 1, "", "to_dimacs"], [17, 2, 1, "", "to_fp"], [17, 2, 1, "", "unweighted"]], "pysat.formula.XOr": [[17, 2, 1, "", "simplified"]], "pysat.pb": [[18, 1, 1, "", "EncType"], [18, 4, 1, "", "NoSuchEncodingError"], [18, 1, 1, "", "PBEnc"]], "pysat.pb.NoSuchEncodingError": [[18, 2, 1, "", "with_traceback"]], "pysat.pb.PBEnc": [[18, 2, 1, "", "atleast"], [18, 2, 1, "", "atmost"], [18, 2, 1, "", "equals"], [18, 2, 1, "", "geq"], [18, 2, 1, "", "leq"]], "pysat.process": [[19, 1, 1, "", "Processor"]], "pysat.process.Processor": [[19, 2, 1, "", "add_clause"], [19, 2, 1, "", "append_formula"], [19, 2, 1, "", "delete"], [19, 2, 1, "", "get_status"], [19, 2, 1, "", "process"], [19, 2, 1, "", "restore"]], "pysat.solvers": [[20, 4, 1, "", "NoSuchSolverError"], [20, 1, 1, "", "Solver"], [20, 1, 1, "", "SolverNames"]], "pysat.solvers.NoSuchSolverError": [[20, 2, 1, "", "with_traceback"]], "pysat.solvers.Solver": [[20, 2, 1, "", "accum_stats"], [20, 2, 1, "", "activate_atmost"], [20, 2, 1, "", "add_atmost"], [20, 2, 1, "", "add_clause"], [20, 2, 1, "", "add_xor_clause"], [20, 2, 1, "", "append_formula"], [20, 2, 1, "", "clear_interrupt"], [20, 2, 1, "", "conf_budget"], [20, 2, 1, "", "configure"], [20, 2, 1, "", "connect_propagator"], [20, 2, 1, "", "dec_budget"], [20, 2, 1, "", "delete"], [20, 2, 1, "", "disable_propagator"], [20, 2, 1, "", "disconnect_propagator"], [20, 2, 1, "", "enable_propagator"], [20, 2, 1, "", "enum_models"], [20, 2, 1, "", "get_core"], [20, 2, 1, "", "get_model"], [20, 2, 1, "", "get_proof"], [20, 2, 1, "", "get_status"], [20, 2, 1, "", "ignore"], [20, 2, 1, "", "interrupt"], [20, 2, 1, "", "is_decision"], [20, 2, 1, "", "new"], [20, 2, 1, "", "nof_clauses"], [20, 2, 1, "", "nof_vars"], [20, 2, 1, "", "observe"], [20, 2, 1, "", "prop_budget"], [20, 2, 1, "", "propagate"], [20, 2, 1, "", "propagator_active"], [20, 2, 1, "", "reset_observed"], [20, 2, 1, "", "set_phases"], [20, 2, 1, "", "solve"], [20, 2, 1, "", "solve_limited"], [20, 2, 1, "", "start_mode"], [20, 2, 1, "", "supports_atmost"], [20, 2, 1, "", "time"], [20, 2, 1, "", "time_accum"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:exception"}, "terms": {"": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21], "00": 12, "0000": [4, 10], "0001": [5, 6, 13, 14, 15, 16], "0002": [5, 9, 11], "0004": 5, "05": [0, 1], "0712": 6, "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "10": [0, 1, 2, 5, 7, 17, 20], "100": [1, 3, 4], "1000": [16, 20], "100000": 20, "107": 18, "108": 2, "1097": 6, "11": [1, 2, 5, 7, 14, 16, 17], "110": 2, "113": 20, "115": [0, 17, 20], "117": 16, "118": 18, "11e9": 17, "12": [1, 7, 17], "122": 2, "123": 18, "123840": 0, "125": [0, 17], "129": [2, 8, 15, 16], "13": [1, 3], "132": 16, "134": [2, 8, 15, 16, 18], "14": [1, 13, 14, 17], "1417": 5, "1444": 5, "15": [1, 2], "150": 20, "153": 8, "1592": 0, "1599": 0, "16": [1, 18, 20], "160707": 20, "161": 4, "167": [2, 15], "17": [1, 2], "172": 15, "173": [5, 14], "177": 4, "18": [1, 10, 17], "180": 2, "182": [5, 14], "19": [1, 17], "1937": 15, "1952": 5, "1955": 5, "1956": 5, "1968": [0, 2, 17], "1973": [8, 9, 15], "1979": [7, 8, 9, 15], "1980": [5, 15], "1984": 5, "1985": 7, "1988": [5, 15], "1990": 7, "1996": 7, "1j": 7, "2": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "20": [0, 1, 17, 20], "2000": 20, "2003": [2, 13, 20], "2004": [2, 7, 15], "2005": 2, "2006": [6, 8, 14, 15, 18], "2007": [6, 14], "2008": 6, "2009": [2, 6, 14, 18, 20], "201": 20, "2010": 13, "2011": [8, 16, 18], "2012": 18, "2013": [2, 8, 9, 10, 11, 14, 16, 20], "2014": [1, 2, 8, 10, 15, 16, 18], "2015": [1, 2, 4, 5, 8, 9, 14, 15, 18], "2016": 14, "2018": [8, 15, 16, 20], "2019": [0, 14, 16], "2020": [0, 1], "2023": 3, "21": [14, 17], "22": [7, 8, 15, 16], "225": [6, 8], "230": 6, "2321": 20, "239": 8, "24": 7, "244": 20, "25": 17, "250": 14, "252": 6, "253": 7, "254": 20, "257": 20, "26": 18, "265": 6, "266": 14, "275": 7, "277": [7, 14], "28": 4, "280": 7, "287": 5, "294": 14, "297": 7, "298": 5, "299": 14, "2f": 20, "2n": 7, "3": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "302": 14, "304": 1, "307": 2, "308": 7, "309": [14, 16, 20], "310": 7, "314": 2, "317": [14, 16, 20], "319": 1, "33": 7, "34": 20, "343": 16, "35": [5, 17], "36": 7, "377": [8, 14, 15], "381": [8, 14, 15], "39": 7, "391": 19, "3951": 20, "3af9d34370a9": 17, "4": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "41": 15, "415": 14, "427": 6, "435": 19, "44": 7, "440": 6, "442": 14, "448": 0, "453": 8, "46": 17, "463": [0, 1], "468": 8, "478": 10, "484": [0, 1], "495": 6, "4f": 20, "4n": 7, "5": [1, 2, 3, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20], "50": 7, "500": 20, "502": 20, "508": 6, "513": [7, 20], "518": 20, "521": 5, "525": 7, "53": [14, 16], "531": [2, 5, 10], "534": 10, "543": [13, 20], "548": [2, 10], "560": [13, 20], "564": [8, 15, 16], "573": [8, 15, 16], "58": 20, "58651": 20, "59": 5, "6": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20], "60": 1, "61": [8, 18], "615": [8, 9, 11], "62": [5, 16], "622": [8, 9, 11], "627": 5, "631": 5, "638": 1, "64": [14, 16], "66": 4, "67": 4, "695": [2, 18], "6c454aea": 17, "7": [1, 2, 5, 7, 8, 14, 15, 16, 17, 18, 20], "70": 0, "720896": 0, "733": [2, 18], "75": [2, 18], "76": 20, "8": [0, 1, 2, 3, 5, 7, 8, 14, 15, 17, 18, 20, 21], "827": 2, "831": 2, "89": [13, 20], "9": [0, 1, 2, 3, 5, 7, 8, 13, 15, 16, 18], "9230380": 20, "95": [0, 1, 2], "97": 2, "9903": 20, "A": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21], "AND": 17, "And": [7, 17], "As": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 19, 20], "At": [2, 10, 17], "By": [4, 16, 18, 20], "For": [3, 7, 8, 9, 11, 14, 15, 17, 19, 20, 21], "ITE": 17, "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 18, 19, 20], "In": [0, 1, 2, 3, 5, 8, 12, 14, 15, 16, 17, 19, 20], "Ines": 14, "Into": 2, "It": [2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20], "Its": [0, 1, 2], "No": [10, 20], "OR": [3, 17], "On": [0, 1, 6, 8, 9, 11, 14, 17], "One": [3, 17, 18, 20], "Or": 17, "Such": [16, 18], "That": 18, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "Their": 2, "Then": [7, 17], "There": [17, 20], "These": [2, 7, 16], "To": [4, 5, 16, 17, 20], "With": 17, "__init__": [2, 20], "__traceback__": [2, 18, 20], "_assert_lt": 10, "_comput": [6, 9, 11, 13], "_disjoint": 14, "_filter_satisfi": 9, "_get_model_cost": 10, "_init": 10, "_map_extlit": [9, 11, 16], "_overapprox": 11, "_process_soft": 14, "_r": 16, "_satisfi": 9, "a1": 17, "a2": 17, "a3": 17, "a_": 20, "a_i": 18, "aaai": [0, 15], "aag": 17, "ab": 6, "abandon_unweight": 3, "abandon_weight": 3, "abbrevi": 9, "abl": [2, 13, 14, 17], "about": [3, 17], "abov": [0, 1, 3, 5, 8, 13, 14, 15, 16, 17, 20], "abstract": [2, 3, 17, 18, 20], "ab\u00edo": 18, "academ": 5, "accept": 3, "access": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21], "accordingli": [9, 17], "account": [5, 8, 20], "accum": 12, "accum_stat": 20, "accumul": [3, 20], "achiev": [15, 17, 20], "across": 0, "act": 20, "acta": 7, "activ": [3, 13, 16, 17, 19, 20], "activate_atmost": 20, "activate_claus": 16, "actual": [0, 1, 2, 4, 19, 20], "ad": [0, 1, 2, 3, 6, 8, 9, 10, 11, 14, 16, 17, 20], "adapt": [3, 5, 14, 15, 16], "adapt_am1": 16, "adaptive_const": 3, "adaptive_upd": 3, "add": [0, 1, 3, 6, 8, 9, 11, 16, 17, 19, 20], "add_atmost": 20, "add_claus": [0, 1, 3, 9, 11, 16, 19, 20], "add_constraint": 3, "add_hard": 8, "add_xor_claus": 20, "adder": 18, "addit": [0, 1, 2, 6, 7, 8, 9, 11, 14, 15, 16, 17, 18, 20, 21], "addition": [2, 5, 8, 9, 11, 14, 15, 16, 17, 19, 20], "adj": 7, "adjac": 7, "adnan": 14, "advantag": 20, "affect": 16, "afip": 2, "aforement": [4, 16, 17], "after": [6, 13, 16, 20], "afterward": [0, 1, 6, 10, 16, 17], "again": [10, 14, 20], "ai": 4, "aig": 17, "aiger": 17, "aim": [4, 12, 15, 17], "aina": 3, "ajtai": 7, "albert": [2, 18], "alberto": 5, "alekhnovich": 7, "alessandro": [5, 8, 9, 11, 14, 15], "alexei": [2, 5, 8, 14, 15, 16], "algebra": 15, "algorithm": [0, 1, 8, 9, 11, 13, 14, 16, 17, 21], "alien": 17, "align": [8, 17], "all": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "alldiffer": 2, "allow": [3, 5, 7, 17, 20], "almost": 21, "alphabet": [2, 18], "alreadi": [8, 17], "also": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20], "altern": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20], "although": [0, 1, 5, 9, 11, 16, 17, 21], "alwai": [3, 20], "am1": 16, "american": 5, "among": [6, 20, 21], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21], "ana": 16, "analysi": 3, "andrau": 14, "ani": [0, 1, 3, 4, 5, 7, 8, 9, 11, 14, 15, 16, 17, 19, 20], "ann": 16, "anoth": [2, 8, 14, 16, 17, 19, 20], "answer": 17, "ans\u00f3tegui": [2, 6, 16], "anteced": 3, "anti": 7, "anton": [8, 9, 11], "antonio": 14, "ant\u00f3nio": [2, 5, 8, 10, 15, 16], "anymor": 2, "anyth": [3, 17], "apart": 17, "api": [17, 18], "appear": [0, 17, 20], "append": [2, 16, 17], "append_formula": [19, 20], "appli": [1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 15, 16, 17, 18, 19], "applic": [0, 1, 2, 8, 13, 14, 16, 18, 20], "approach": [5, 8, 14], "appropri": [9, 11], "approx": 13, "approxim": [0, 9, 11, 13, 15, 16], "approxmc": [1, 21], "approxmcv4": [0, 21], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21], "arbitrari": [3, 5, 8, 17], "arc": 18, "archi": 15, "aren": [14, 17, 19], "arg": [7, 17], "argelich": 16, "argument": [0, 1, 2, 3, 4, 5, 9, 11, 16, 17, 18, 19, 20], "aris": [15, 18, 20], "armin": [3, 7, 19], "around": 15, "art": [0, 1, 8, 16], "artif": 16, "as_dnf": 17, "asin": 2, "ask": [3, 20], "assess": 10, "assign": [1, 3, 4, 9, 10, 12, 16, 17, 20], "associ": [16, 17], "assum": [3, 7, 8, 9, 11, 13, 15, 16, 17, 19, 20], "assump": [13, 16], "assumpt": [6, 8, 13, 14, 16, 17, 20], "atleast": [2, 18], "atleast1": 7, "atleastk": [2, 17, 18], "atm": 17, "atmost": [2, 7, 17, 18, 20], "atmost1": [2, 5, 6, 7, 8, 14, 15, 16], "atmostk": [2, 8, 17, 18, 20], "atom": [5, 8, 15, 17], "atoms_onli": 17, "attach": [3, 17, 20], "attach_valu": 3, "attach_vpool": 17, "audemard": [14, 16, 20], "augment": [2, 4, 6, 9, 10, 11, 13, 16, 17], "autarki": 19, "automat": [2, 9, 11, 17, 19, 20], "auxiliari": [0, 1, 2, 8, 9, 11, 16, 17], "auxvar": 17, "avail": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20], "avoid": 17, "award": 21, "b": [17, 18, 21], "bacchu": 8, "back": [8, 15, 17], "backbon": [9, 11, 21], "backport": 17, "backtrack": 3, "bailleux": 2, "balakrishnan": 7, "balanc": 1, "base": [2, 4, 5, 6, 8, 9, 14, 15, 16, 17, 20, 21], "basic": [2, 3, 8, 11, 14, 16, 17, 18, 20, 21], "batcher": 2, "bbc": 20, "bbe3": 17, "bbone": 4, "bbscan": 21, "bcf": 15, "bdd": 18, "becaus": [6, 9, 11, 16, 17, 20], "becom": [2, 3, 10, 16, 17], "been": [0, 1, 5], "befor": [1, 3, 9, 10, 11, 14, 16, 20], "beg": 16, "begin": [10, 17], "behavior": [19, 20], "behaviour": [8, 20], "being": [3, 6, 9, 11, 16, 17, 20], "bell": 5, "belong": [13, 16], "belov": [8, 9, 11], "below": [2, 3, 8, 17, 19, 20], "benefici": [3, 20], "benjamin": 19, "besid": [0, 9, 11, 16, 17, 20], "best": [14, 16, 17, 18], "between": [2, 7, 15, 16, 17], "bica": 21, "bier": [3, 19], "big": 19, "bigvee_": 17, "bigwedge_": [7, 17], "bin": 15, "binari": [18, 19], "binmerg": 18, "binom": 7, "bird": 0, "bit": 6, "bitwis": [2, 17], "bl": 11, "black": 7, "blake": 15, "blo": 16, "block": [8, 9, 11, 16, 17, 19, 20], "bonet": [6, 16], "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20], "boolean": [2, 3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 20, 21], "booleanengin": [3, 20], "boolexpr": 17, "bootstrap": [8, 14, 16, 17], "bootstrap_with": [3, 8, 17, 19, 20], "both": [2, 4, 5, 11, 15, 16, 17, 20], "boufkhad": 2, "bound": [0, 1, 2, 3, 6, 9, 10, 11, 14, 16, 17, 18, 19, 20], "branch": [14, 20], "brayton": 5, "break": 8, "brief": 16, "bring": 21, "brought": 21, "budget": 20, "build": [3, 15], "built": 17, "bump": 16, "bunch": [6, 17], "by_ref": 17, "bz2": 17, "bzip2": 17, "c": [0, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21], "c9e1": 17, "c_i": 17, "cach": 14, "cadic": [3, 8, 19, 20], "cadical103": 20, "cadical153": 20, "cadical195": [3, 20], "calcul": [3, 6, 10, 13], "calculu": [0, 17], "call": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21], "callback": 3, "calle": 3, "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "cancel": 3, "cannot": [2, 6, 7, 9, 11, 17, 18], "canon": 15, "capabl": [5, 8, 16], "capit": 20, "carbonel": [2, 18], "card": [0, 1, 6, 17, 18, 20, 21], "cardenc": [0, 1, 2, 20], "cardin": [0, 1, 3, 6, 8, 9, 10, 11, 15, 16, 17, 18, 20, 21], "cardn": 6, "cardnetwrk": [0, 2], "care": 16, "carlo": [2, 6, 8, 9, 15, 16], "carmin": [8, 15, 16], "carsten": 2, "case": [0, 1, 2, 3, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 18, 20], "castelluccia": 20, "cat": [12, 13], "categori": 16, "cav": [0, 1], "cb": 7, "cd": 20, "cd103": 20, "cd15": [14, 20], "cd153": 20, "cd19": [5, 15, 20], "cd195": 20, "cdcl": 3, "cdl": 20, "cdl103": 20, "cdl15": 20, "cdl153": 20, "cdl19": 20, "cdl195": 20, "cdot": [7, 17, 18, 20], "celesti": 5, "cell": [1, 7], "centeno": 8, "centralis": 3, "certain": 3, "chakraborti": 1, "chang": 8, "charact": 17, "check": [3, 6, 9, 10, 11, 13, 14, 16, 17, 20], "check_model": 3, "checker": 15, "chessboard": 7, "chicago": 15, "children": 17, "choic": [3, 5, 15], "choos": [2, 17, 18, 20], "chosen": [8, 16], "chrono": 20, "chunk": 4, "chunk_siz": 4, "circ": 18, "circuit": 17, "circumst": 2, "cl": 9, "clash": [9, 11, 16, 18], "classmethod": [2, 18], "claud": 20, "claus": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20], "clausal": [3, 4, 5, 15, 17], "clausif": [15, 17], "clausifi": [15, 17], "cld": [9, 21], "clean": [2, 17], "cleanup": 17, "cleanup_watch": 3, "clear": [3, 5, 10, 20], "clear_interrupt": [10, 20], "clearli": 7, "clid": 13, "cluster": 16, "cm": 20, "cms5": 20, "cnf": [0, 1, 2, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "cnf1": 17, "cnf2": 17, "cnfplu": [2, 12, 14, 16, 17, 18], "code": [3, 9, 11, 17, 20, 21], "coffe": 5, "collect": [3, 16, 17, 21], "collis": 2, "comb": 17, "combin": [8, 17], "combinatori": [7, 8], "come": [0, 3, 15, 17, 20], "command": [0, 1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16], "comment": 17, "comment_lead": 17, "common": 20, "commun": 4, "compact": 18, "compar": [3, 9, 14], "competit": 20, "compil": [5, 15], "compl": 4, "complement": [4, 16], "complet": [1, 2, 3, 5, 7, 15, 16, 17, 20], "complex": [0, 1, 7, 17], "compon": [14, 15, 16, 19], "compress": 17, "compress_with": 17, "compressed_with": 17, "compris": [5, 7, 8, 16], "comput": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21], "compute_": 16, "conclud": 16, "concret": [2, 8, 11, 12, 14, 18], "condit": [16, 19], "condition": [9, 11, 19], "conf_budget": 20, "confer": 2, "confid": [0, 1], "configur": [19, 20], "conflic": 20, "conflict": [3, 16, 20], "conj": 17, "conjectur": 7, "conjoin": [9, 11], "conjuct": 17, "conjunct": [2, 7, 17], "connect": [16, 17, 19], "connect_propag": [3, 20], "consecut": [2, 20], "consequ": 3, "consid": [2, 5, 7, 17], "consider": 3, "consist": [7, 18], "constant": [3, 17], "constel": 5, "constitut": 14, "constrain": 15, "constraint": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 20], "construct": [2, 5, 9, 11, 16, 17], "constructor": [0, 1, 2, 3, 6, 9, 10, 11, 13, 15, 16, 17, 20], "consult": 3, "contain": [2, 3, 5, 6, 7, 8, 13, 16, 17, 18, 19, 20], "content": [9, 11], "context": 17, "continu": [5, 17], "contrast": [2, 14], "contribut": 3, "control": [5, 8, 9, 11, 14, 15, 16, 20], "conveni": [2, 12, 17, 19], "convention": 17, "cook": 7, "copi": [6, 17, 20], "core": [2, 4, 5, 6, 8, 10, 13, 14, 15, 16, 20], "core_sel": 16, "core_sum": 16, "corechunk": 4, "corner": 7, "corr": 6, "correct": [3, 5, 8, 9, 11, 14, 16], "correctli": 20, "correspond": [3, 6, 7, 9, 10, 11, 14, 16, 17, 19, 20], "cost": [6, 9, 10, 11, 14, 16], "could": [16, 17], "count": [0, 1, 2, 3, 5, 18, 20], "counter": [2, 3, 18, 21], "counterpart": 20, "coupl": 20, "cover": [5, 7, 14, 15, 16, 19, 21], "cp": [2, 3, 5, 8, 10, 14, 15, 16], "creat": [2, 3, 4, 5, 10, 15, 16, 17, 18, 19, 20], "create_sum": 16, "creation": [2, 18, 20], "crux": 5, "crypto": 20, "crypto5": 20, "cryptograph": 20, "cryptominisat": [0, 1, 20], "cryptominisat5": 20, "cryptosat": 20, "cup": 5, "current": [2, 3, 5, 7, 9, 10, 11, 14, 16, 17, 19, 20, 21], "curti": 5, "d": [5, 8, 9, 11, 14, 15], "dac": 1, "daniel": 1, "darwich": 14, "davi": 8, "david": 2, "dcall": [14, 15], "de": 13, "deactiv": 16, "deal": [2, 5, 8, 12, 13, 16, 17], "dealt": 16, "dec_budget": 20, "decid": [3, 5, 6, 14, 15, 19], "decis": [3, 20], "decompos": 19, "decrement": 3, "deem": [3, 6], "deep": 17, "deepcopi": 17, "def": [3, 20], "default": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20], "defin": [1, 3, 7, 8, 9, 11, 17], "degener": 7, "delet": [0, 1, 2, 4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 17, 19, 20, 21], "delta": [0, 1], "demand": [5, 8, 17], "demonstr": [5, 21], "denot": [0, 1, 2, 3, 6, 7, 16, 17, 18], "depend": [3, 5, 7, 9, 11, 15, 16, 17, 19], "deriv": [0, 3, 6, 17], "descent": 20, "describ": [4, 9, 11, 13, 16, 17, 20], "design": [2, 3, 7, 17, 20], "desir": [2, 18], "despit": 17, "destroi": [2, 16, 17], "destructor": [0, 1, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 19, 20], "detach": [0, 1], "detect": [5, 8, 14, 15, 16, 19], "determin": [1, 5, 15, 17, 20], "determinist": 20, "dev0": 21, "dev3": 21, "dev8": 17, "develop": [17, 18, 21], "devis": 3, "diagon": 7, "dichotom": 15, "dict": [3, 8, 20], "dictionari": [3, 16, 17], "differ": [2, 3, 6, 8, 14, 16, 17, 20], "dimac": [13, 14, 17], "direct": 20, "directli": [2, 14, 17, 18], "disabl": [3, 9, 11, 17, 20], "disable_propag": 20, "discard": 17, "disconnect": 20, "disconnect_propag": 20, "disj": 14, "disjoint": [5, 9, 11, 14], "disjunct": [16, 17], "disregard": 16, "dissert": 15, "distinct": [7, 17], "distinguish": 17, "distribut": 7, "div": 16, "divers": 16, "divid": [11, 16], "dll": [8, 14, 15], "dnf": [5, 17], "do": [5, 8, 9, 11, 14, 15, 16, 20], "do_cld_check": [9, 11], "document": 16, "dodaro": [8, 15, 16], "doe": [2, 3, 9, 11, 13, 14, 16, 17, 20], "domain": [2, 8], "domino": 7, "done": [1, 3, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20], "drawback": 20, "drop": [16, 20], "drup": 20, "dual": [5, 8, 15], "dualiti": 15, "dualiz": [5, 14], "due": [16, 17, 20], "dummy_lit": 3, "dump": 17, "duplic": [17, 20], "dure": [1, 2, 10, 16, 19, 20], "e": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20], "e_": 8, "e_1": 8, "e_n": 8, "each": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20], "eagerli": 3, "earlier": 0, "easi": 17, "easili": 20, "ecai": [8, 14, 15], "edg": 7, "edit": 19, "edward": 5, "effect": [6, 15, 16], "effici": [0, 2, 3, 7, 14, 16, 20], "either": [0, 1, 2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20], "el": 19, "electr": [13, 20], "element": [7, 8], "elementari": 8, "elim": 19, "elimin": [3, 19], "els": [8, 13, 17, 20], "empti": [3, 16, 17], "enabl": [3, 8, 9, 10, 11, 17, 20], "enable_propag": 20, "enc": 6, "enclit": 17, "encod": [0, 1, 6, 7, 8, 10, 15, 16, 17, 20, 21], "encourag": 3, "enctyp": [0, 1, 2, 6, 18, 20], "end": [15, 17, 19, 20], "enforc": [2, 6, 7, 8, 9, 10, 16, 20], "engin": [0, 21], "enough": [3, 17], "enric": [2, 18], "enrico": [8, 14, 15], "ensur": [1, 7], "entir": [4, 5, 17], "enum": [2, 4, 17, 18], "enum_model": [12, 17, 20], "enumer": [4, 5, 8, 13, 16, 19, 20, 21], "enumerate_model": 12, "epsilon": [0, 1], "eq": 17, "equal": [0, 1, 2, 14, 16, 17, 18, 19], "equalk": 2, "equalsk": [2, 18], "equisatisfi": 19, "equiv": 17, "equival": [5, 17, 19], "erick": 8, "espresso": 5, "essenc": 5, "essenti": [6, 8, 9, 11, 13, 15, 17], "estim": [0, 4], "etc": 20, "evalu": [8, 15, 16], "even": [5, 7], "eventu": 20, "everi": [4, 6, 7, 8, 9, 10, 11, 16, 17, 20], "evidenc": 15, "exact": [0, 20], "exactli": [0, 1, 15, 17], "examin": 3, "exampl": [0, 1, 2, 3, 17, 18, 20], "exce": [3, 20], "except": [2, 16, 17, 18, 20], "exclus": [3, 17], "exctract": 11, "execut": [0, 1, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 20], "exemplifi": 3, "exhaust": [5, 7, 8, 14, 15, 16], "exhaust_cor": 16, "exist": [2, 3, 5, 7, 16, 20], "expect": [0, 1, 9, 10, 11, 16, 17, 19, 20], "expect_interrupt": [10, 20], "expens": 20, "explain": 3, "explain_failur": 3, "explan": 15, "explicit": [0, 1, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 20], "explicitli": [9, 11, 20], "exploit": [12, 15, 20], "exponenti": [7, 15], "export": 17, "export_vpool": 17, "expos": [3, 20], "expr": 17, "express": 15, "extend": [2, 6, 8, 10, 16, 17, 19, 20], "extens": [15, 17, 18, 20], "extern": [9, 11, 16, 17, 20, 21], "extra": 15, "extract": [3, 4, 5, 6, 8, 9, 11, 13, 14, 15, 16, 17, 20], "extractor": [9, 14, 21], "extrem": 5, "e\u00e9n": [13, 18, 20], "f": [0, 1, 5, 15, 16, 17, 20], "f1": 17, "f2": 17, "f3": 17, "f_1": 17, "f_2": 17, "f_i": 17, "f_n": 17, "facil": 17, "facilit": [12, 17], "fact": [3, 5, 7, 15, 17], "factor": [0, 1], "factori": 17, "fahiem": 8, "fail": 19, "fals": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20], "falsifi": [3, 17], "falsified_bi": 3, "far": [2, 18], "fashion": [10, 14, 15], "fast": 17, "faster": 4, "fazeka": 3, "feasibl": 7, "featur": [0, 18, 20], "fed": [8, 15, 20], "federico": [8, 9, 10, 11], "feed": [10, 20], "felip": 2, "few": [0, 1, 4, 7, 8, 14, 15, 16, 17, 20, 21], "file": [4, 5, 14, 16, 17], "file_point": 17, "filenam": 17, "fill": 17, "filter": [4, 16, 20], "filter_assump": 16, "final": [1, 2, 3, 4, 8, 14, 15, 16, 17, 19, 20, 21], "find": 17, "finish": [5, 16, 20], "finish_level": 16, "finit": 2, "first": [2, 5, 6, 8, 13, 14, 16, 20], "five": 21, "fix": [3, 16], "flag": [3, 12, 17, 19], "flatten": 17, "float": [0, 1, 3, 4, 5, 14, 15, 17, 20], "flow": 8, "fly": [0, 1, 3, 8, 9, 10, 11, 16, 17, 20], "fm": 21, "fname": 17, "focu": [4, 15], "focus": 16, "focus_on": 4, "follow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20], "foral": 7, "forbid": 8, "forc": [7, 15, 16, 20], "form": [2, 3, 8, 15, 17, 18, 20], "format": [5, 9, 10, 11, 13, 14, 16, 17, 18, 20], "former": [3, 5, 8, 15, 16, 19, 20], "formul": [2, 7, 8], "formula": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21], "formulaerror": 17, "formulatyp": 17, "forq": 14, "forward": 19, "found": [3, 6, 8, 10, 11, 16, 17, 19, 20], "found_optimum": 10, "four": 21, "fp": 17, "frac": [0, 1], "freez": 19, "fremont": 1, "freq": 20, "frequenc": 20, "fresh": [6, 9, 11, 16], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "from_aig": 17, "from_claus": [5, 17, 19], "from_fil": [0, 1, 4, 5, 6, 9, 10, 11, 13, 14, 15, 16, 17], "from_fp": 17, "from_str": [5, 17], "fu": 21, "fujita": 2, "full": [13, 16], "function": [0, 1, 3, 5, 16, 17, 18, 19, 20, 21], "further": [6, 9, 11, 16], "furthermor": 16, "futur": 3, "g": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20], "g3": [4, 8, 9, 11, 14, 16, 20], "g30": 20, "g4": [10, 20], "g41": 20, "g42": 20, "g421": 20, "gab\u00e0": 16, "garbag": [3, 16], "gari": 5, "gaussian": 3, "gc3": 20, "gc30": 20, "gc4": 20, "gc41": 20, "gener": [1, 3, 5, 14, 15, 16, 18, 21], "genhard": [17, 20, 21], "gent": 2, "geq": [0, 2, 17, 18], "get": [0, 1, 2, 3, 5, 6, 8, 13, 15, 17, 20], "get_cor": [6, 8, 16, 20], "get_model": [10, 19, 20], "get_proof": 20, "get_statu": [19, 20], "gh": [8, 20], "gill": [14, 16, 20], "github": 20, "giunchiglia": [8, 14, 15], "give": [0, 1, 3, 17, 20], "given": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "global": 19, "glucos": [10, 14, 16, 20], "glucose3": [4, 6, 8, 9, 10, 11, 12, 13, 20], "glucose30": 20, "glucose4": 20, "glucose41": 20, "glucose42": 20, "glucose421": 20, "gluecard3": 20, "gluecard30": 20, "gluecard4": 20, "gluecard41": 20, "go": [9, 11, 14], "gocht": [0, 1], "graph": [7, 19], "gra\u00e7a": 16, "greater": [2, 6, 7, 20], "group": [18, 21], "grow": 21, "gt": 7, "guarante": [1, 14, 19, 20], "guid": [2, 6, 8, 10, 14, 15, 16], "gunnar": 7, "gz": 17, "gzip": 17, "h": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17], "ha": [0, 1, 2, 5, 6, 7, 9, 11, 14, 15, 16, 17, 18, 20, 21], "hachtel": 5, "haken": 7, "half": 7, "hand": [3, 4, 14, 16, 20], "handbook": [2, 18, 19], "handi": [0, 3, 15, 20], "handl": [1, 3, 8, 16, 20], "happen": 20, "hard": [6, 8, 9, 10, 11, 13, 14, 16, 17, 20, 21], "harden": 16, "harder": 20, "hasegawa": 2, "hash": 1, "hashabl": 17, "have": [3, 5, 6, 7, 8, 16, 17, 20], "he": 18, "hello_world": 17, "help": [0, 1, 2, 9, 11, 16, 17, 20], "henc": [5, 15], "hera": [8, 9, 10, 11], "here": [0, 3, 7, 8, 9, 11, 16, 17, 19, 20, 21], "heurist": [4, 5, 8, 9, 11, 14, 15, 16, 20], "high": 5, "hiroshi": 2, "hit": [4, 5, 14, 15, 21], "hitman": [5, 14, 15, 21], "hold": [4, 16, 17], "hole": [3, 7, 17], "how": [3, 7, 12, 16, 17, 19, 21], "howev": [7, 9, 14, 17, 20], "htype": 8, "human": 17, "hyper": 19, "h\u00f6lldobler": 18, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "i0": 17, "i1": [7, 17], "i2": 17, "i_1": 20, "i_2": 20, "ian": 2, "ictai": 2, "id": [9, 11, 15, 17], "id2obj": 17, "idea": [2, 3, 14, 15, 16], "ident": 20, "identifi": [2, 6, 7, 16, 17, 18], "idpool": [2, 17, 18], "ignasi": 18, "ignatiev": [2, 5, 8, 14, 15, 16], "ignor": [3, 20], "ii": [0, 17], "ij": 7, "ijcai": [5, 8, 9, 11, 15], "ik": 7, "illustr": [3, 7, 12, 16, 19], "im": 7, "immedi": [3, 16], "imper": 3, "impl": 17, "implement": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21], "impli": 17, "implic": [4, 5, 15, 17, 19], "implicit": [5, 8, 14, 15], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21], "importantli": [5, 15, 16, 17, 19], "impos": [2, 8], "imposs": 7, "improv": [0, 1, 6, 10, 14, 16, 20], "inact": 3, "includ": [0, 1, 2, 3, 4, 5, 7, 8, 15, 16, 17, 18, 20, 21], "inclus": 17, "incomplet": [16, 20], "incr": [10, 16, 20], "increas": [2, 16], "increment": [2, 6, 9, 10, 11, 13, 14, 16, 20], "inde": 3, "independ": 17, "index": [9, 11, 14], "indic": [3, 5, 9, 11, 17, 19, 20], "individu": [16, 20], "induct": [13, 20], "infer": 3, "influenc": 3, "inform": [3, 19, 20, 21], "informatica": 7, "inherit": [3, 7, 17, 20], "init": [6, 8, 16, 20], "init_oracl": 15, "init_wstr": 16, "initi": [5, 6, 8, 10, 13, 16, 17, 19, 20], "initialis": [1, 3, 4, 5, 15], "inp": 17, "input": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "insid": 20, "inspir": 5, "instal": [0, 1, 17, 18], "instanc": [8, 17, 19, 20], "instead": [2, 13, 15, 16, 17, 18], "instruct": [8, 14, 15, 16], "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "integ": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20], "integr": [3, 17], "intel": 16, "intention": 17, "interest": [3, 4, 17, 20], "interfac": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21], "intern": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "interrupt": [10, 20], "interv": [4, 17], "intract": 7, "intrins": [5, 14, 15, 16], "introduc": [0, 2, 7, 9, 10, 11, 15, 16, 17, 20], "invok": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20], "involv": [4, 5, 6, 14, 15, 16, 17], "in\u00ea": [2, 4, 10, 16], "io": 5, "ipasir": [3, 20], "irreduc": 5, "is_act": 3, "is_atmost": 17, "is_decis": 20, "ismvl": 13, "issu": 17, "ite": 17, "iter": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21], "itertool": 17, "itot": [2, 10, 16], "its": [2, 3, 5, 6, 9, 11, 13, 14, 15, 16, 17, 18, 20], "itself": [3, 17, 19], "j": [1, 5, 7, 8, 14, 17], "j_1": 20, "j_2": 20, "j_i": 8, "janota": [4, 8, 9, 11, 14], "jean": [14, 16, 20], "jessica": 8, "ji": 7, "jk": 7, "joao": [2, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16], "job": 16, "joel": 16, "join": 17, "joint": 2, "jordi": [6, 10, 16], "josep": 16, "joshi": [2, 10], "journal": 5, "jsat": [2, 8, 15, 16, 18], "junker": 15, "justify_unweight": 3, "justify_weight": 3, "j\u00e4rvisalo": 19, "k": [2, 5, 7, 8, 15, 16, 17, 18, 20], "kappa": 1, "karem": 14, "karp": 8, "karsten": 20, "katalin": 3, "keep": [3, 13, 17, 19, 20], "kei": 15, "kenneth": 2, "kept": [9, 19], "keyword": [2, 3, 17], "ki": [7, 18], "kiesl": 19, "kind": [3, 17, 20], "kirchweg": 3, "kj": 7, "kluwer": 5, "kmtotal": 2, "knot": 14, "know": 17, "knowledg": 17, "known": [5, 7, 10, 14, 17, 18, 20], "koshimura": 2, "krishnamurthi": 7, "kuldeep": [0, 1], "kval": 7, "kwarg": [7, 17, 20], "l": [5, 6, 8, 9, 11, 16, 18, 20], "l_i": 16, "l_j": 16, "l_k": 20, "label": 17, "lack": 14, "ladder": 2, "lagniez": [14, 16, 20], "lambda": 17, "land": [17, 20], "languag": 21, "larger": [6, 7, 20], "largest": [2, 15, 17], "last": [16, 20], "later": [2, 13, 14, 16, 20], "latter": [3, 5, 8, 12, 15, 16, 17, 18, 19], "laurent": [14, 16, 20], "lazi": [0, 1, 3], "lbx": [8, 14, 15, 21], "lcg": 3, "ldot": [7, 8, 17, 20], "lead": [17, 20], "learn": [3, 19], "learnt": 20, "least": [7, 16, 17], "left": [0, 1, 3, 16, 17, 18, 20], "leftrightarrow": 17, "len": [7, 8, 13, 16, 20], "lenght": 5, "length": [2, 5], "leq": [0, 1, 2, 6, 16, 17, 18, 20], "less": [3, 14, 16], "let": [8, 17], "level": [0, 1, 3, 4, 5, 6, 9, 10, 11, 13, 14, 15, 16, 17, 20], "levi": [6, 16], "lexicograph": 16, "lgl": [14, 20], "lib2": 17, "librari": [18, 21], "liffiton": [5, 10, 14], "lift": 4, "light": 17, "lightweight": 14, "like": [2, 8, 10, 13, 14, 15, 17, 18, 20, 21], "limit": [10, 20], "lin": [5, 15], "line": [0, 1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17], "linear": [3, 10, 11, 15, 17, 20], "linearconstraint": 3, "lingel": [8, 20], "list": 21, "lit": [0, 1, 2, 3, 9, 11, 16, 17, 18, 20], "liter": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20], "littl": 17, "liu": 2, "lleida": [18, 21], "log": [7, 20], "logic": [0, 5, 17, 18, 21], "longer": [3, 20], "look": [14, 17], "loop": [6, 9, 10, 11, 12, 13, 14, 16], "lost": 19, "low": [9, 11, 20], "lower": 10, "lp": 17, "lsu": 21, "lsuplu": 10, "luisa": [6, 16], "lync": [2, 4, 10, 14, 16], "lzma": 17, "m": [2, 6, 7, 8, 10, 16, 18, 20], "m22": [6, 8, 9, 11, 13, 20], "made": [2, 3, 4, 10, 11, 14, 15, 18, 20], "magic": 3, "maher": 14, "mai": [0, 1, 2, 3, 4, 5, 9, 11, 14, 15, 16, 17, 18, 19, 20], "main": [2, 4, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21], "maintain": 18, "make": [2, 3, 7, 9, 10, 11, 15, 16, 17, 20], "malik": 21, "manag": [2, 3, 17], "mandatori": [2, 20], "mani": [2, 3, 5, 9, 10, 11, 14, 15, 16, 20], "manipul": [20, 21], "manner": 8, "manquinho": [2, 6, 10, 18], "manthei": 18, "manual": 17, "manupul": 17, "many\u00e0": 2, "map": [2, 3, 8, 9, 11, 16, 17, 20], "mapl": 20, "maplechrono": 20, "maplecm": 20, "maplecomsps_lrb": 20, "maplelcmdistchronobt": 20, "maplesat": 20, "maratea": [8, 14, 15], "marco": [8, 14, 15], "mari": [14, 16, 20], "maria": [6, 16], "mark": [3, 5, 9, 10, 14, 16, 17, 20], "marku": 3, "marqu": [2, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16], "martin": [2, 10], "match": [7, 20], "mate": [0, 1, 20], "math": 16, "mathbb": [17, 18], "mathcal": [0, 1, 16, 17, 20], "mathemat": [0, 5, 7, 17], "mathia": 3, "matti": 19, "max": 6, "maxh": 8, "maxim": [7, 9, 11, 16, 17], "maximum": [6, 14, 16, 17], "maxsat": [2, 8, 9, 14, 15, 17, 19, 20, 21], "mbound": 3, "mc": [0, 8, 14, 15, 19, 20, 21], "mcard": 20, "mcb": 20, "mccluskei": 5, "mcm": 20, "mcmullen": 5, "mcs_usecld": 8, "mcse": [5, 9, 11, 14, 16], "mcsl": [8, 21], "mdecai": 3, "mean": [3, 5, 6, 7, 8, 9, 11, 12, 14, 16, 19, 20], "meaningless": 2, "meant": [3, 17, 21], "measur": [5, 20], "meel": [0, 1], "memori": 17, "mencia": 9, "menc\u00eda": [8, 15], "mention": 16, "merg": [2, 17, 18], "merge_with": 2, "mergesat": 20, "mergesat3": 20, "mergesat30": 20, "method": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20], "mg3": 20, "mgh": [5, 14, 20], "mgs3": 20, "michael": 7, "mikl\u00f3": 7, "mikola": [9, 11, 14], "mikol\u00e1": [4, 8], "million": 17, "minf": 5, "minicard": [2, 8, 10, 12, 16, 17, 20], "minim": [5, 9, 11, 13, 14, 15, 16, 20, 21], "minimalist": 4, "minimis": 5, "minimise_du": 15, "minimize_cor": [16, 20], "minimum": [5, 6, 16, 21], "minisat": [8, 13, 20], "minisat22": [6, 13, 20], "minisatgh": [8, 20], "minsat": 17, "minw": [6, 16], "minz": [14, 15, 16], "miss": 18, "mixtur": 11, "miyuki": 2, "mneimneh": 14, "mode": [3, 10, 16, 20], "model": [1, 2, 3, 6, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21], "model_count": 20, "modern": 20, "modif": 16, "modifi": [2, 6, 16], "modulo": [2, 3], "monthli": 5, "more": [2, 3, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 18, 20], "moreno": 8, "moreov": [17, 20], "morgado": [2, 5, 8, 10, 14, 15, 16], "mosh": 1, "most": [2, 4, 5, 7, 8, 14, 15, 16, 17, 18, 20], "mpl": 20, "msat": 20, "msat22": 20, "mscg": [2, 8, 15, 16], "mss": [9, 11, 16], "mtotal": 2, "mu": [5, 15, 16, 19, 20, 21], "much": [3, 16], "multi": 17, "multigenom": 8, "multipl": [3, 5, 16, 17, 20], "multipli": 7, "muse": 14, "must": [3, 7, 8, 10, 14, 17, 19, 20], "musx": 21, "mutil": 7, "mxs_adapt": 8, "mxs_exhaust": 8, "mxs_minz": 8, "mxs_trim": 8, "mxsat": 8, "mypowerfulengin": 3, "n": [1, 2, 5, 7, 14, 17, 18, 20], "n1": [5, 17], "n10": 17, "n2": 17, "n3": 17, "n4": [5, 17], "n5": 17, "n_i": 15, "naiv": 3, "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20], "nativ": [2, 8, 9, 10, 11, 16, 17, 18, 20], "navig": 5, "necessari": [4, 6, 8, 9, 11, 14, 16, 17], "necessarili": [15, 17, 20], "need": [0, 2, 3, 6, 9, 11, 15, 17, 18, 19, 20], "neg": [3, 5, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 19], "negat": [2, 5, 6, 9, 11, 15, 16, 17], "neq": 7, "network": [2, 18], "new": [2, 3, 6, 8, 9, 10, 11, 16, 17, 20, 21], "newli": [2, 3, 9, 11, 16, 17], "next": [3, 10, 15, 16, 20], "next_level": 16, "niemetz": 3, "nieuwenhui": [2, 18], "nightingal": 2, "nikla": [13, 18, 20], "no_obj": 8, "no_return": 20, "node": 7, "nodisj": 14, "nof": [12, 13], "nof_claus": [17, 20], "nof_hol": [7, 17, 20], "nof_new": 2, "nof_sampl": 1, "nof_var": 20, "nof_vari": 17, "nohard": 16, "nohl": 20, "non": [3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 20], "none": [0, 1, 2, 3, 4, 5, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20], "norbert": 18, "normal": [2, 9, 11, 17], "normalize_neg": 17, "nosuchencodingerror": [2, 18], "nosuchsolvererror": 20, "note": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20], "noth": [13, 17], "notifi": 3, "now": [1, 3, 6, 17, 20], "np": 5, "num": [0, 15], "number": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21], "numer": [3, 16, 19], "nv": [7, 17], "o": [5, 6, 8, 10, 16], "o0": 17, "oadapt": 5, "obj": [8, 17], "object": [0, 1, 2, 3, 4, 6, 7, 8, 10, 13, 15, 16, 17, 18, 19, 20], "observ": [3, 7, 20], "obtain": [0, 1, 3, 8, 9, 10, 11, 16, 17, 20], "occupi": 17, "occur": [9, 11, 16, 17], "occurr": 3, "odcal": 5, "oexhaust": 5, "off": [4, 8, 16], "offer": [17, 20], "often": [5, 15, 17], "ogawa": 2, "old": 17, "olivera": [2, 18], "olivi": [2, 18], "olliti": 16, "ominz": 5, "omit": 20, "on_assign": 3, "on_backtrack": 3, "on_new_level": 3, "onc": [2, 3, 5, 10, 14, 16, 17, 19, 20], "one": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20], "ones": [7, 17], "onli": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "onlin": [9, 11], "onodisj": 5, "opb": 17, "open": 17, "oper": [3, 8, 17], "operand": 17, "oplu": 17, "opposit": [7, 17], "opt": [4, 5, 17], "optim": [2, 6, 8, 15, 16, 17, 18, 21], "optimum": [6, 8, 10, 16], "option": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 20], "optux": [5, 21], "opuresat": 5, "oracl": [0, 1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20], "oracle_tim": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16], "order": [1, 3, 7, 8, 10, 20], "orig": [5, 19], "origin": [0, 1, 5, 6, 7, 8, 9, 11, 15, 16, 17, 19, 21], "orphan": 17, "osolv": 5, "other": [3, 8, 14, 15, 16, 17, 18, 19, 20, 21], "otherwis": [2, 3, 6, 9, 10, 11, 13, 16, 17, 19, 20], "otrim": 5, "ounsort": 5, "our": 9, "out": [0, 4, 16, 17, 20], "outcom": 20, "outlin": 8, "output": [1, 4, 19], "outsid": 15, "over": [0, 1, 3, 8, 9, 11, 12, 13, 15, 16, 17, 20], "overal": [5, 7, 16], "overrid": 10, "overwritten": 14, "own": 3, "p": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "p_i": 15, "packag": [0, 1, 17, 18, 20], "padapt": 5, "pai": 16, "pair": [1, 2, 3, 7, 9, 11, 16, 17, 18, 20], "pairwis": [2, 3, 6, 20], "paper": [2, 4], "par": 7, "paradigm": 14, "parallel": 1, "paramat": 14, "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "pariti": [3, 7, 20], "parityconstraint": 3, "pars": 17, "parser": 17, "part": [0, 9, 10, 11, 16, 17], "parti": 21, "partial": [6, 7, 8, 9, 11, 13, 14, 16, 17], "particip": 16, "particular": [4, 5, 15, 17], "pass": [3, 8, 15, 16, 17], "passiv": [3, 20], "pb": [17, 21], "pbenc": 18, "pblib": 18, "pbound": 3, "pdcall": 5, "pdecai": 3, "per": 4, "perfect": 7, "perform": [0, 1, 8, 14, 15, 16, 20], "perman": 3, "perspect": 7, "peter": [2, 18], "pexhaust": 5, "phase": [5, 8, 14, 20], "phase_sav": 20, "phi": 6, "philipp": 18, "php": [7, 17, 20], "php20": 20, "piec": [17, 20], "pigeon": [7, 17, 20], "pigeonhol": [7, 20], "pip": [0, 1, 18], "pipatsrisawat": 14, "place": [7, 17], "plai": 16, "plain": [13, 14, 17], "plan": 5, "plane": [6, 10], "pleas": [2, 15, 18, 21], "pminz": 5, "po": 17, "point": [2, 4, 10, 16, 17, 18, 20], "pointer": 17, "pol": 20, "polar": [8, 20], "pole": 5, "polynomi": 7, "pool": [2, 17, 18], "port": 20, "portugues": 5, "posit": [3, 17], "possibl": [1, 2, 3, 8, 16, 17, 19, 20], "postprocess": 16, "potenti": [2, 3, 17], "pp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20], "ppuresat": 5, "pr": [0, 1], "practic": [2, 7, 8, 16, 17, 18, 21], "preambl": 17, "preced": 17, "predefin": 20, "prefer": [8, 9, 11, 14, 15, 16, 20], "prefix": 5, "preiner": 3, "preliminari": 14, "prepend": 17, "preprocess": [3, 9, 11, 14, 16, 19], "preprocessor": 19, "present": [7, 8, 9, 11, 17, 21], "preserv": [16, 19], "prestwich": 2, "pretti": 17, "previou": [3, 6, 9, 11, 17, 19, 20], "previous": [2, 3, 9, 11, 13, 16, 20], "previti": [5, 8, 9, 11, 14, 15], "price": 16, "prime": [5, 21], "primer": [5, 21], "principl": [7, 20], "print": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20], "prior": 10, "privat": 4, "probabilist": 1, "probe": 19, "probehbr": 19, "problem": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 20, 21], "proc": 19, "proce": 6, "procedur": [3, 12, 13, 15, 16], "process": [2, 3, 4, 5, 6, 8, 9, 11, 13, 14, 15, 16, 17, 20, 21], "process_am1": 16, "process_cor": 16, "process_linear": 3, "process_par": 3, "process_sel": 16, "process_sum": 16, "processor": [16, 19], "produc": [2, 6, 18], "product": 15, "program": 3, "project": [0, 21], "promin": 5, "proof": [7, 20], "prop_budget": 20, "propag": [3, 16, 20], "propagate_unweight": 3, "propagate_weight": 3, "propagator_act": 20, "properli": [3, 17], "propos": [6, 9], "proposit": [0, 4, 7, 17], "prototyp": [9, 10, 11, 14], "prove": 7, "provid": [0, 1, 2, 3, 4, 5, 7, 9, 13, 14, 17, 18, 19, 20, 21], "provide_reason": 3, "psearch": 5, "pseudo": [2, 3, 9, 11, 17, 20, 21], "psolver": 5, "ptrim": 5, "publish": [0, 1, 5], "punsort": 5, "pure": [5, 8, 9, 11, 14, 15, 16, 21], "puresat": [14, 15], "put": [17, 20], "py": [0, 1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17], "pyapproxmc": 0, "pycryptosat": 20, "pypblib": [18, 21], "pypi": 18, "pysat_fals": 17, "pysat_tru": 17, "python": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21], "pyunigen": 1, "quadrat": 3, "qualiti": 5, "quantifi": 14, "question": 8, "quickxplain": 15, "quin": 5, "r": [6, 16, 17], "rail": 15, "rais": [2, 4, 17, 18, 20], "random": [0, 1, 20], "rang": [0, 1, 3, 5, 17, 18, 20], "rank": 16, "rather": [0, 1], "rational": 16, "rc2": [8, 14, 15, 20, 21], "rc2stratifi": 16, "re": 17, "reach": [0, 16, 19, 20], "reactiv": 16, "read": [4, 17], "readi": 3, "reason": [3, 20], "recal": 17, "receiv": [1, 3, 6, 9, 10, 11, 13, 17, 20], "recent": 16, "reckhow": 7, "recommend": [17, 20], "reconstruct": 19, "recurs": 17, "redefin": [16, 20], "reduc": [4, 5, 10, 14, 15, 16], "reduct": [5, 14, 15, 16, 19], "refer": [3, 6, 13, 15, 16, 17, 19], "refin": [9, 10, 11, 13], "reformul": 2, "refut": 7, "register_watch": 3, "regul": [6, 16], "regular": 2, "reimplement": [5, 15], "reinit": 6, "reiniti": 6, "rel": [4, 7, 20], "relat": [5, 7, 15, 16, 17, 20], "relationship": 16, "relax": [1, 6, 14, 15, 16], "relax_cor": 6, "releas": [17, 20], "relev": [0, 1], "reli": [5, 15], "remain": [13, 16, 17], "rememb": 16, "remov": [3, 7, 10, 13, 16, 20], "remove_unit_cor": 6, "rep": 5, "replac": 16, "replic": [14, 17, 20], "report": [0, 6, 8, 9, 10, 11, 13, 15, 16, 20], "repr": 17, "repres": [2, 3, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20], "represent": [2, 5, 15, 17], "request": [1, 20], "requir": [0, 1, 3, 5, 7, 9, 11, 15, 17, 19], "research": 8, "reserv": 17, "reset": 20, "reset_observ": 20, "resid": 7, "residu": 6, "resolut": [7, 19], "resolv": 19, "resort": 17, "resp": [5, 17], "respect": [0, 1, 5, 8, 16, 17, 20], "respons": [2, 6, 15, 17, 18, 20], "rest": [3, 16], "restart": [10, 17, 20], "restor": 19, "result": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20], "reus": [2, 10, 17, 20], "revisit": 18, "rh": [2, 16], "richard": 8, "right": [0, 1, 3, 16, 17, 18, 20], "rightarrow": [5, 17], "rnd": 20, "robert": [2, 5, 7, 18], "roberto": 2, "robust": [2, 8, 15, 16], "rodriguez": 2, "rodr\u00edguez": 18, "role": 16, "root": [3, 17], "rotat": 4, "roughli": [14, 16], "round": [3, 9, 11, 14, 16, 19], "roussel": [2, 18], "ruben": [2, 10], "rudimentari": 20, "run": [0, 1, 3, 4, 9, 10, 11, 14, 15, 19, 20], "ryuzo": 2, "s_i": 8, "safe": 16, "sakallah": 14, "same": [3, 5, 9, 11, 15, 16, 17, 19, 20], "sampl": [0, 1], "sample_ov": 1, "sampler": 21, "sangiovanni": 5, "sanjit": 1, "sat": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "satisf": 14, "satisfact": 2, "satisfi": [1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "saurabh": [2, 10], "save": [14, 17, 20], "scalabl": 1, "scc": 19, "scheme": 14, "sci": [7, 13, 20], "scratch": 17, "script": [12, 20, 21], "seamless": 17, "search": [3, 10, 11, 15], "second": [3, 5, 19], "see": [1, 2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21], "seed": [0, 1, 20], "seek": 17, "seen": [0, 1, 5, 7, 8, 9, 10, 11, 13, 14, 16, 17, 20], "sel": [8, 10], "select": [2, 4, 8, 18, 20], "selector": [6, 8, 9, 10, 11, 13, 14, 16], "self": [2, 3, 6, 9, 10, 11, 16, 17, 18, 20], "semant": 17, "semin": 6, "sens": 17, "separ": [3, 16, 17, 18], "seqcount": [2, 18], "sequenc": [7, 8, 9, 11], "sequenti": [2, 18], "seri": [0, 1, 6, 10, 16], "serv": [2, 8, 9, 11, 16, 17, 20], "seshia": 1, "set": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21], "set_bound": 16, "set_context": 17, "set_phas": 20, "setd": [9, 11], "setminu": 7, "setup_observ": 3, "seventh": 21, "sever": [2, 16, 17, 18, 20, 21], "sharad": 6, "share": [2, 3, 5, 18], "she": 18, "short": 7, "shorten": 20, "should": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 20], "show": 8, "shown": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 20], "side": [3, 16, 20], "sigint": 20, "sign": [8, 9, 11, 16], "signal": 20, "signifi": [3, 5, 9, 11, 14, 17], "signific": 14, "silva": [2, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16], "similar": 15, "simon": [14, 16, 20], "simpl": [3, 4, 5, 8, 9, 11, 12, 14, 15, 16, 17, 20], "simpler": 8, "simplest": 12, "simplif": [17, 21], "simplifi": [5, 17], "simplist": 13, "simultan": [2, 3], "sinc": [2, 6, 7, 18, 20], "singl": [3, 5, 15, 16, 17, 19, 20], "sinz": 2, "sit": 17, "site": 21, "situat": 16, "sixth": 21, "size": [0, 1, 2, 4, 5, 6, 7, 8, 10, 13, 14, 17, 20], "skip": 17, "sky": 5, "slightli": 16, "slower": 17, "smallest": [5, 8, 9, 11, 14, 15, 16, 17], "smt": [3, 17], "smu": [5, 14], "smuse": 14, "so": [2, 14, 16, 17, 18, 19, 20], "soft": [6, 8, 9, 10, 11, 13, 14, 15, 16, 17], "sol": 1, "solut": [6, 8, 9, 10, 11, 16], "solv": [0, 1, 2, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21], "solve_limit": 20, "solver": [0, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21], "solver_nam": [9, 11], "solvernam": [6, 8, 9, 10, 11, 13, 14, 16, 20], "some": [0, 1, 3, 9, 11, 16, 17, 18, 19, 20], "some_formula": 3, "some_vari": 3, "soo": [0, 1, 20], "soon": [3, 14, 16, 20], "sophist": [3, 6], "sort": [2, 8, 15, 18], "sortnetwrk": [2, 18], "sought": [4, 5, 15], "sourc": 3, "southern": 5, "space": 17, "special": 17, "specif": 17, "specifi": [0, 1, 2, 3, 4, 5, 8, 9, 11, 13, 15, 16, 17, 18, 19, 20], "speed": 4, "spent": [4, 5, 15, 20], "split": [6, 16], "split_cor": 6, "spring": 2, "ss_assump": 11, "stack": 19, "stage": [0, 1, 2, 16, 20], "stand": [9, 14, 16], "standalon": 18, "standard": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 20], "start": [5, 12, 14, 15, 16, 17, 20], "start_from": 17, "start_mod": 20, "stat": 20, "state": [0, 1, 3, 7, 8, 16, 17], "statement": [19, 20], "static": [2, 17], "statist": [3, 20], "statu": [3, 19, 20], "stefan": 3, "steffen": 18, "steink": 18, "step": [5, 14], "stephan": [0, 1], "stephen": 7, "steven": 2, "still": [13, 16], "stop": [3, 5, 9, 10, 11, 14, 15, 16, 17], "store": [2, 3, 6, 8, 10, 16, 17, 20], "str": [4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20], "strategi": [5, 15], "stratif": 16, "string": [8, 17, 20], "strong": 5, "strongli": 19, "structur": 3, "studi": [0, 7, 17], "st\u00e5lmarck": 7, "sub": [17, 20], "subclass": 17, "subformula": [5, 14, 17], "subject": [0, 1, 8], "subject_to": 8, "subset": [4, 6, 8, 9, 11, 13, 14, 16, 17, 20], "subseteq": 16, "substitut": 19, "subsum": 19, "subsumpt": 19, "subtract": 5, "succ": 7, "successor": 7, "suffic": 16, "suitabl": 17, "sum": [2, 3, 5, 6, 10, 16, 17, 18, 20], "sum_": [2, 6, 16, 17, 18, 20], "summand": [3, 17], "summar": 20, "summat": 3, "supplementari": 17, "support": [0, 2, 3, 8, 10, 13, 14, 15, 17, 18, 20], "supports_atmost": 20, "suppos": [3, 4, 5, 16, 20, 21], "supratik": 1, "sure": [2, 9, 11, 16, 17], "surprisingli": 16, "survei": 10, "switch": [8, 17], "switch_phas": 8, "symb": 7, "symmetr": 7, "synonim": 18, "synonym": [5, 18], "syntax": 17, "synthesi": 5, "system": [2, 5, 7], "sz": [6, 16], "szeider": 3, "s\u00f6rensson": [13, 18, 20], "t": [2, 5, 6, 7, 8, 14, 16, 17, 19], "t1": 2, "t2": 2, "taca": 1, "tackl": 16, "take": [2, 8, 16, 20], "taken": 5, "target": [5, 6, 8, 11, 13, 15, 17, 20], "task": 12, "tautolog": 3, "tb": [2, 18, 20], "techic": 17, "technic": [5, 17], "techniqu": [3, 6, 16, 19], "technologi": 17, "tempor": [13, 20], "test": [4, 5, 6, 13, 15, 16], "text": 7, "textrm": [0, 1], "textsf": [6, 7], "than": [0, 1, 2, 3, 4, 6, 7, 10, 16, 17, 20], "thank": 5, "thei": [3, 4, 5, 14, 15, 17, 19, 20], "them": [2, 3, 5, 9, 11, 12, 14, 15, 16, 17, 20, 21], "theor": [7, 13, 20], "theori": 3, "therefor": [4, 16], "therein": 19, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21], "third": 21, "those": [2, 17], "thousand": 17, "thread": 20, "three": [2, 3, 17, 18], "through": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20], "thrown": 20, "thu": [4, 7, 17, 18, 20], "tile": 7, "time": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20], "time_accum": 20, "timer": [9, 10, 11, 20], "tint": [0, 1], "to_alien": 17, "to_block": 8, "to_dimac": 17, "to_enum": 12, "to_fil": 17, "to_fp": 17, "to_hit": 8, "to_test": [13, 20], "to_watch": 3, "tobia": 18, "tobj": 16, "togeth": [6, 9, 11, 13, 16, 20], "toler": [0, 1], "too": [17, 19, 20], "tool": [4, 14, 15, 21], "toolkit": [17, 21], "top": [2, 7, 14, 16, 17, 18], "top_id": [2, 18], "topv": [7, 17], "topw": 17, "toru": 2, "total": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16], "toward": [2, 6], "track": 3, "transform": [0, 3, 17], "transit": [7, 19], "translat": [2, 8, 15, 17, 18], "travers": [9, 15, 16, 17], "treat": 16, "treat_cor": 6, "tree": [2, 17], "tri": [13, 14, 17], "triangleq": 5, "tricki": 7, "trigger": [3, 19], "trim": [5, 8, 14, 15, 16], "trim_cor": 16, "trivial": [3, 8], "true": [3, 4, 6, 7, 8, 9, 10, 11, 15, 16, 17, 19, 20], "truth": [3, 5], "try": [8, 16, 17, 20], "tseitin": [0, 17], "tupl": [3, 20], "turn": [4, 8, 16, 19], "tweak": 19, "two": [2, 3, 4, 5, 7, 11, 14, 15, 16, 17], "type": [2, 3, 4, 5, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20], "typic": [17, 20], "u": 8, "ubiquit": 2, "ubound": 2, "ulrich": 15, "unassign": [3, 17], "unavail": 19, "unchang": [17, 19], "uncompress": 17, "undefin": [1, 20], "under": [3, 8, 9, 11], "underli": [8, 10, 14], "undo": 3, "unexpect": 20, "unifi": 20, "uniform": 21, "unigen": 21, "unigen3": 1, "unimpl": 17, "uniqu": [14, 17], "unit": [2, 3, 6, 8, 10, 14, 16, 17, 20], "univers": [8, 15, 18, 21], "unknown": [2, 17, 18, 20], "unless": [3, 8, 17, 20], "unnecessari": [4, 16], "unord": 8, "unreduc": 14, "unsafisti": 13, "unsat": [6, 10, 20], "unsatisfi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 19, 20], "unsort": [5, 8, 14, 15], "unspecifi": [0, 1, 16], "unsupportedbound": 2, "until": [5, 9, 10, 11, 12, 14, 15, 20], "unus": 6, "unweight": [3, 5, 10, 16, 17, 18, 20], "up": [2, 3, 4, 8, 15, 16, 17, 18, 20], "updat": [2, 3, 9, 16, 17], "update_setd": 9, "update_sum": 16, "update_vpool": 17, "upon": 3, "upper": [2, 10, 17, 20], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "usabl": 19, "usag": [2, 8, 16, 17, 18, 20, 21], "use_cld": [9, 11], "use_ext": 17, "use_tim": [9, 11, 20], "user": [0, 1, 3, 4, 5, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20], "utilis": [0, 1, 5], "v": [1, 4, 5, 6, 7, 10, 12, 13, 15, 16, 17], "v1": 17, "v2": 17, "v_i": 15, "valu": [0, 1, 2, 3, 6, 7, 8, 9, 11, 14, 16, 17, 18, 19, 20], "valueerror": [2, 4], "var": [3, 4, 5, 7, 10, 16, 17, 20], "vardi": 1, "varepsilon": [0, 1], "vari": 20, "variabl": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20], "variant": [6, 17], "variou": [2, 3, 5, 17, 20], "varphi": 4, "vasco": [2, 6, 10, 18], "vee": [5, 6, 7, 8, 9, 11, 13, 15, 17], "vee_": 7, "verb": 7, "verbos": [0, 1, 4, 5, 6, 7, 10, 13, 14, 15, 16], "version": [0, 1, 14, 16, 20, 21], "via": [4, 20], "vid": 17, "vincentelli": 5, "violat": 3, "vivif": 19, "vivifi": 19, "vlimit": 20, "vlsi": 5, "vol": [2, 18], "vpool": [2, 17, 18], "vv": [6, 9, 11, 13, 16], "vvv": 14, "w": [6, 17, 18], "w_i": [17, 20], "wa": [3, 5, 9, 10, 11, 16, 20], "wai": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 20], "want": [0, 1, 2, 3, 4, 5, 9, 11, 15, 17, 19], "warm": [12, 20], "warm_start": 20, "watch": 3, "wcnf": [4, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17], "wcnfplu": [10, 14, 16, 17], "we": [3, 8, 17], "websit": 21, "wedg": [5, 7, 16, 17], "weight": [3, 5, 6, 8, 10, 14, 16, 17, 18, 20], "well": [0, 1, 2, 5, 7, 8, 14, 15, 17, 18, 19, 20, 21], "were": [1, 5, 7], "wght": 17, "what": [3, 8, 15, 17, 20, 21], "when": [0, 2, 3, 5, 6, 7, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20], "whenev": [6, 16], "where": [2, 6, 16, 17, 18, 20], "whether": [3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 20], "which": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21], "while": [2, 3, 5, 6, 7, 8, 9, 13, 16, 17, 19, 20, 21], "white": 7, "whose": [4, 5, 6, 8, 9, 11, 14, 15, 16, 17, 20], "why": 3, "wide": 7, "willard": 5, "willing": 3, "win": 21, "wit": 1, "with_proof": 20, "with_soft": 6, "with_traceback": [2, 18, 20], "without": [3, 17, 20], "wlit": 18, "wmsu1": 6, "word": 5, "work": [0, 1, 3, 6, 8, 10, 12, 14, 16, 18, 20], "workshop": 2, "worst": 16, "would": [3, 9, 11, 17], "wpm2": 16, "wrapper": [0, 1, 16, 20, 21], "write": 17, "written": [5, 17], "wrt": [0, 1, 5], "x": [5, 17], "x1": 17, "x2": 17, "x_": [7, 17, 20], "x_1": [17, 20], "x_2": 17, "x_3": 17, "x_i": [2, 17, 18, 20], "xor": [0, 1, 3, 17, 20], "xz": [0, 1, 4, 5, 6, 9, 10, 11, 14, 15, 16, 17], "xzcat": [0, 1, 4, 5, 6, 9, 10, 11, 14, 15, 16], "y": [1, 3, 5, 17], "y_i": 18, "yacin": 2, "yangyang": 2, "yet": [3, 9, 11, 17], "you": 17, "z": [5, 17], "z3": 17, "zaher": 14, "zero": [14, 16], "zhaohui": 6, "zstd": 17}, "titles": ["ApproxMC model counter (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.allies.approxmc</span></code>)", "UniGen almost-uniform sampler (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.allies.unigen</span></code>)", "Cardinality encodings (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.card</span></code>)", "External engines (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.engines</span></code>)", "Collection of backbone computation algorithms (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.examples.bbscan</span></code>)", "Bica algorithm for formula simplification (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.examples.bica</span></code>)", "Fu&amp;Malik MaxSAT algorithm (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.examples.fm</span></code>)", "Hard formula generator (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.examples.genhard</span></code>)", "Minimum/minimal hitting set solver (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.examples.hitman</span></code>)", "LBX-like MCS enumerator (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.examples.lbx</span></code>)", "LSU algorithm for MaxSAT (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.examples.lsu</span></code>)", "CLD-like MCS enumerator (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.examples.mcsls</span></code>)", "An iterative model enumerator (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.examples.models</span></code>)", "A deletion-based MUS extractor (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.examples.musx</span></code>)", "OptUx optimal MUS enumerator (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.examples.optux</span></code>)", "Primer-B algorithm for prime enumeration (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.examples.primer</span></code>)", "RC2 MaxSAT solver (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.examples.rc2</span></code>)", "Boolean formula manipulation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.formula</span></code>)", "Pseudo-Boolean encodings (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.pb</span></code>)", "Formula processing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.process</span></code>)", "SAT solvers\u2019 API (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pysat.solvers</span></code>)", "Welcome to PySAT\u2019s documentation!"], "titleterms": {"": 21, "A": 13, "algorithm": [4, 5, 6, 10, 15], "alli": [0, 1, 21], "almost": 1, "an": 12, "api": [20, 21], "approxmc": 0, "b": 15, "backbon": 4, "base": 13, "bbscan": 4, "bica": 5, "boolean": [17, 18], "card": 2, "cardin": 2, "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "cld": 11, "collect": 4, "comput": 4, "core": 21, "counter": 0, "delet": 13, "descript": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "detail": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "document": 21, "encod": [2, 18], "engin": 3, "enumer": [9, 11, 12, 14, 15], "exampl": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21], "extern": 3, "extractor": 13, "fm": 6, "formula": [5, 7, 17, 19], "fu": 6, "gener": 7, "genhard": 7, "hard": 7, "hit": 8, "hitman": 8, "iter": 12, "lbx": 9, "like": [9, 11], "list": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "lsu": 10, "malik": 6, "manipul": 17, "maxsat": [6, 10, 16], "mc": [9, 11], "mcsl": 11, "minim": 8, "minimum": 8, "model": [0, 12], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "mu": [13, 14], "musx": 13, "optim": 14, "optux": 14, "packag": 21, "pb": 18, "prime": 15, "primer": 15, "process": 19, "pseudo": 18, "pysat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "rc2": 16, "sampler": 1, "sat": 20, "set": 8, "simplif": 5, "solver": [8, 16, 20], "supplementari": 21, "uniform": 1, "unigen": 1, "welcom": 21}})